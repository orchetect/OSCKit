{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/osckit.OSCKit\/documentation\/OSCKit\/OSC-Value-Parsing"},"metadata":{"role":"collectionGroup","modules":[{"name":"OSCKit"}],"roleHeading":"API Collection","title":"OSC Value Parsing"},"schemaVersion":{"minor":3,"major":0,"patch":0},"hierarchy":{"paths":[["doc:\/\/osckit.OSCKit\/documentation\/OSCKit"],["doc:\/\/osckit.OSCKit\/documentation\/OSCKit","doc:\/\/osckit.OSCKit\/documentation\/OSCKit\/Receiving-OSC"]]},"abstract":[{"type":"text","text":"Methods for parsing OSC Message value collections."}],"primaryContentSections":[{"kind":"content","content":[{"type":"heading","text":"Using masked() to validate and unwrap expected value types","level":3,"anchor":"Using-masked-to-validate-and-unwrap-expected-value-types"},{"inlineContent":[{"type":"text","text":"Since local OSC “addresses” (OSC Methods) are generally considered methods (akin to functions) which take parameters (OSC values\/arguments), in most use cases an OSC Method will have a defined type mask. OSCKit provides a powerful and flexible API to both validate and strongly type an OSC value array."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"Validate and unwrap value array with expected member "},{"code":"String","type":"codeVoice"},{"type":"text","text":":"}],"type":"paragraph"},{"code":["let str = try oscMessage.values.masked(String.self)","print(\"string: \\(str)\")"],"syntax":"swift","type":"codeListing"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The special wrapper type "},{"code":"AnyOSCNumberValue","type":"codeVoice"},{"text":" is able to match any number and provides easy type-erased access to its contents, converting value types if necessary automatically.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Validate and unwrap value array with expected members "},{"type":"codeVoice","code":"String, Int, <number>?"},{"type":"text","text":":"}]},{"type":"codeListing","syntax":"swift","code":["let (str, int, num) = try oscMessage.values.masked(","    String.self, Int.self, AnyOSCNumberValue?.self",")","print(str, int, num?.intValue)","print(str, int, num?.doubleValue)","print(str, int, num?.base) \/\/ access to the strongly typed integer or floating-point value"]},{"text":"Using matches(mask:) to test for a mask with type tokens","anchor":"Using-matchesmask-to-test-for-a-mask-with-type-tokens","type":"heading","level":3},{"inlineContent":[{"type":"text","text":"If value unwrapping is not needed, a mere test of value types in an OSC value sequence can be done using a mask of "},{"type":"reference","isActive":true,"identifier":"doc:\/\/osckit.OSCKit\/documentation\/OSCKit\/OSCValueToken"},{"type":"text","text":" tokens."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"This can be useful at barriers in more complex codebases where early return or error-throwing due to mismatching value masks may be wanted before the values are ever unwrapped and statically typed.","type":"text"}]},{"syntax":"swift","code":["\/\/ [String, Int, AnyOSCNumberValue?]","guard oscMessage.values.matches(","    mask: [.string, .int, .numberOptional]",") else { return }"],"type":"codeListing"},{"level":3,"anchor":"Manually-unwrapping-expected-value-types","type":"heading","text":"Manually unwrapping expected value types"},{"type":"paragraph","inlineContent":[{"text":"It is generally easier to use ","type":"text"},{"type":"codeVoice","code":"masked()"},{"type":"text","text":" as demonstrated above, since it handles masking, strongly typing, as well as translation of interpolated ("},{"code":"Int8","type":"codeVoice"},{"type":"text","text":", "},{"type":"codeVoice","code":"Int16"},{"type":"text","text":", etc.) and opaque ("},{"type":"codeVoice","code":"AnyOSCNumberValue"},{"text":", etc.) types. However the following is generally functionally equivalent.","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"Validate and unwrap value array with expected member ","type":"text"},{"type":"codeVoice","code":"String"},{"type":"text","text":":"}]},{"code":["guard oscMessage.values.count == 1 else { ... }","guard let str = oscMessage.values[0] as? String else { ... } \/\/ compulsory","print(str) \/\/ String"],"syntax":"swift","type":"codeListing"},{"inlineContent":[{"text":"Validate and unwrap value array with expected members ","type":"text"},{"type":"codeVoice","code":"String, Int32?, Double?"},{"text":":","type":"text"}],"type":"paragraph"},{"syntax":"swift","code":["guard (1...3).contains(oscMessage.values.count) else { ... }","guard let str = oscMessage.values[0] as? String else { ... } \/\/ compulsory","let int: Int32? = oscMessage.count > 1 ? oscMessage.values[1] as? Int32 : nil \/\/ optional","let dbl: Double? = oscMessage.count > 2 ? oscMessage.values[2] as? Double : nil \/\/ optional","print(str, int, dbl) \/\/ String, Int32?, Double?"],"type":"codeListing"},{"level":3,"type":"heading","text":"Parsing a variable number of values","anchor":"Parsing-a-variable-number-of-values"},{"inlineContent":[{"type":"text","text":"It may be desired to imperatively validate and cast values when their expected mask may be unknown."}],"type":"paragraph"},{"syntax":"swift","type":"codeListing","code":["oscMessage.values.forEach { oscValue in","    switch oscValue {","    case let val as String:","        print(val)","    case let val as Int32:","        print(val)","    default:","        \/\/ unhandled","    }","}"]},{"anchor":"","type":"heading","text":"","level":2}]}],"seeAlsoSections":[{"generated":true,"title":"OSC Messages","anchor":"OSC-Messages","identifiers":["doc:\/\/osckit.OSCKit\/documentation\/OSCKit\/OSCMessage","doc:\/\/osckit.OSCKit\/documentation\/OSCKit\/OSC-Address-Pattern-Parsing","doc:\/\/osckit.OSCKit\/documentation\/OSCKit\/OSC-Value-Types"]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/osckit\/osc-value-parsing"]}],"sections":[],"kind":"article","topicSections":[{"identifiers":["doc:\/\/osckit.OSCKit\/documentation\/OSCKit\/OSCValueToken","doc:\/\/osckit.OSCKit\/documentation\/OSCKit\/OSCValueMaskError"],"anchor":"Topics"}],"references":{"doc://osckit.OSCKit/documentation/OSCKit/OSCValueToken":{"url":"\/documentation\/osckit\/oscvaluetoken","navigatorTitle":[{"kind":"identifier","text":"OSCValueToken"}],"type":"topic","kind":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"OSCValueToken"}],"title":"OSCValueToken","identifier":"doc:\/\/osckit.OSCKit\/documentation\/OSCKit\/OSCValueToken","role":"symbol","abstract":[{"type":"reference","identifier":"doc:\/\/osckit.OSCKit\/documentation\/OSCKit\/OSCValue","isActive":true},{"text":" type tokens, including optional variants and opaque types.","type":"text"},{"type":"text","text":" "},{"text":"Useful for abstractions that mask sequences of values.","type":"text"}]},"doc://osckit.OSCKit/documentation/OSCKit/OSC-Address-Pattern-Parsing":{"kind":"article","abstract":[{"text":"Methods for parsing OSC Message address patterns.","type":"text"}],"role":"collectionGroup","title":"OSC Address Pattern Parsing","identifier":"doc:\/\/osckit.OSCKit\/documentation\/OSCKit\/OSC-Address-Pattern-Parsing","type":"topic","url":"\/documentation\/osckit\/osc-address-pattern-parsing"},"doc://osckit.OSCKit/documentation/OSCKit/Receiving-OSC":{"kind":"article","abstract":[{"type":"text","text":"Receiving OSC messages and bundles."}],"role":"collectionGroup","title":"Receiving OSC","identifier":"doc:\/\/osckit.OSCKit\/documentation\/OSCKit\/Receiving-OSC","type":"topic","url":"\/documentation\/osckit\/receiving-osc"},"doc://osckit.OSCKit/documentation/OSCKit/OSCValues":{"identifier":"doc:\/\/osckit.OSCKit\/documentation\/OSCKit\/OSCValues","kind":"symbol","url":"\/documentation\/osckit\/oscvalues","title":"OSCValues","navigatorTitle":[{"text":"OSCValues","kind":"identifier"}],"fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"OSCValues","kind":"identifier"}],"role":"symbol","abstract":[],"type":"topic"},"doc://osckit.OSCKit/documentation/OSCKit":{"role":"collection","url":"\/documentation\/osckit","kind":"symbol","abstract":[{"text":"Open Sound Control (OSC) library for macOS, iOS and tvOS.","type":"text"}],"title":"OSCKit","identifier":"doc:\/\/osckit.OSCKit\/documentation\/OSCKit","type":"topic"},"doc://osckit.OSCKit/documentation/OSCKit/OSCValueMaskError":{"role":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"OSCValueMaskError"}],"kind":"symbol","title":"OSCValueMaskError","navigatorTitle":[{"text":"OSCValueMaskError","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/osckit.OSCKit\/documentation\/OSCKit\/OSCValueMaskError","url":"\/documentation\/osckit\/oscvaluemaskerror","abstract":[{"text":"Error thrown by ","type":"text"},{"type":"reference","identifier":"doc:\/\/osckit.OSCKit\/documentation\/OSCKit\/OSCValues","isActive":true},{"text":" ","type":"text"},{"type":"codeVoice","code":"masked(...)"},{"text":" methods.","type":"text"}]},"doc://osckit.OSCKit/documentation/OSCKit/OSCMessage":{"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"OSCMessage","kind":"identifier"}],"kind":"symbol","title":"OSCMessage","navigatorTitle":[{"kind":"identifier","text":"OSCMessage"}],"type":"topic","identifier":"doc:\/\/osckit.OSCKit\/documentation\/OSCKit\/OSCMessage","url":"\/documentation\/osckit\/oscmessage","abstract":[{"text":"OSC Message.","type":"text"}]},"doc://osckit.OSCKit/documentation/OSCKit/OSC-Value-Types":{"title":"OSC Value Types","role":"collectionGroup","abstract":[{"text":"OSC Message value types.","type":"text"}],"type":"topic","identifier":"doc:\/\/osckit.OSCKit\/documentation\/OSCKit\/OSC-Value-Types","url":"\/documentation\/osckit\/osc-value-types","kind":"article"},"doc://osckit.OSCKit/documentation/OSCKit/OSCValue":{"role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"OSCValue"}],"type":"topic","identifier":"doc:\/\/osckit.OSCKit\/documentation\/OSCKit\/OSCValue","url":"\/documentation\/osckit\/oscvalue","abstract":[{"type":"text","text":"Protocol to which all compatible OSC value types conform."}],"title":"OSCValue","navigatorTitle":[{"kind":"identifier","text":"OSCValue"}],"kind":"symbol"}}}