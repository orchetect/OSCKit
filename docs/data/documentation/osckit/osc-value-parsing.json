{"topicSections":[{"anchor":"Topics","identifiers":["doc:\/\/osckit.OSCKit\/documentation\/OSCKit\/OSCValueToken","doc:\/\/osckit.OSCKit\/documentation\/OSCKit\/OSCValueMaskError"]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/osckit.OSCKit\/documentation\/OSCKit\/OSC-Value-Parsing"},"sections":[],"metadata":{"title":"OSC Value Parsing","modules":[{"name":"OSCKit"}],"roleHeading":"API Collection","role":"collectionGroup"},"kind":"article","primaryContentSections":[{"content":[{"level":3,"type":"heading","text":"Using masked() to validate and unwrap expected value types","anchor":"Using-masked-to-validate-and-unwrap-expected-value-types"},{"inlineContent":[{"type":"text","text":"Since local OSC “addresses” (OSC Methods) are generally considered methods (akin to functions) which take parameters (OSC values\/arguments), in most use cases an OSC Method will have a defined type mask. OSCKit provides a powerful and flexible API to both validate and strongly type an OSC value array."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Validate and unwrap value array with expected member "},{"type":"codeVoice","code":"String"},{"type":"text","text":":"}]},{"code":["let str = try oscMessage.values.masked(String.self)","print(\"string: \\(str)\")"],"type":"codeListing","syntax":"swift"},{"type":"paragraph","inlineContent":[{"text":"The special wrapper type ","type":"text"},{"type":"codeVoice","code":"AnyOSCNumberValue"},{"text":" is able to match any number and provides easy type-erased access to its contents, converting value types if necessary automatically.","type":"text"}]},{"inlineContent":[{"type":"text","text":"Validate and unwrap value array with expected members "},{"type":"codeVoice","code":"String, Int, <number>?"},{"type":"text","text":":"}],"type":"paragraph"},{"code":["let (str, int, num) = try oscMessage.values.masked(","    String.self, Int.self, AnyOSCNumberValue?.self",")","print(str, int, num?.intValue)","print(str, int, num?.doubleValue)","print(str, int, num?.base) \/\/ access to the strongly typed integer or floating-point value"],"type":"codeListing","syntax":"swift"},{"type":"heading","level":3,"anchor":"Using-matchesmask-to-test-for-a-mask-with-type-tokens","text":"Using matches(mask:) to test for a mask with type tokens"},{"type":"paragraph","inlineContent":[{"text":"If value unwrapping is not needed, a mere test of value types in an OSC value sequence can be done using a mask of ","type":"text"},{"isActive":true,"identifier":"doc:\/\/osckit.OSCKit\/documentation\/OSCKit\/OSCValueToken","type":"reference"},{"text":" tokens.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"This can be useful at barriers in more complex codebases where early return or error-throwing due to mismatching value masks may be wanted before the values are ever unwrapped and statically typed."}]},{"syntax":"swift","code":["\/\/ [String, Int, AnyOSCNumberValue?]","guard oscMessage.values.matches(","    mask: [.string, .int, .numberOptional]",") else { return }"],"type":"codeListing"},{"level":3,"type":"heading","text":"Manually unwrapping expected value types","anchor":"Manually-unwrapping-expected-value-types"},{"inlineContent":[{"type":"text","text":"It is generally easier to use "},{"type":"codeVoice","code":"masked()"},{"type":"text","text":" as demonstrated above, since it handles masking, strongly typing, as well as translation of interpolated ("},{"code":"Int8","type":"codeVoice"},{"text":", ","type":"text"},{"code":"Int16","type":"codeVoice"},{"text":", etc.) and opaque (","type":"text"},{"code":"AnyOSCNumberValue","type":"codeVoice"},{"type":"text","text":", etc.) types. However the following is generally functionally equivalent."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"Validate and unwrap value array with expected member "},{"type":"codeVoice","code":"String"},{"text":":","type":"text"}],"type":"paragraph"},{"code":["guard oscMessage.values.count == 1 else { ... }","guard let str = oscMessage.values[0] as? String else { ... } \/\/ compulsory","print(str) \/\/ String"],"syntax":"swift","type":"codeListing"},{"inlineContent":[{"type":"text","text":"Validate and unwrap value array with expected members "},{"code":"String, Int32?, Double?","type":"codeVoice"},{"text":":","type":"text"}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["guard (1...3).contains(oscMessage.values.count) else { ... }","guard let str = oscMessage.values[0] as? String else { ... } \/\/ compulsory","let int: Int32? = oscMessage.count > 1 ? oscMessage.values[1] as? Int32 : nil \/\/ optional","let dbl: Double? = oscMessage.count > 2 ? oscMessage.values[2] as? Double : nil \/\/ optional","print(str, int, dbl) \/\/ String, Int32?, Double?"]},{"anchor":"Parsing-a-variable-number-of-values","text":"Parsing a variable number of values","type":"heading","level":3},{"type":"paragraph","inlineContent":[{"type":"text","text":"It may be desired to imperatively validate and cast values when their expected mask may be unknown."}]},{"type":"codeListing","syntax":"swift","code":["oscMessage.values.forEach { oscValue in","    switch oscValue {","    case let val as String:","        print(val)","    case let val as Int32:","        print(val)","    default:","        \/\/ unhandled","    }","}"]},{"type":"heading","anchor":"","text":"","level":2}],"kind":"content"}],"hierarchy":{"paths":[["doc:\/\/osckit.OSCKit\/documentation\/OSCKit"],["doc:\/\/osckit.OSCKit\/documentation\/OSCKit","doc:\/\/osckit.OSCKit\/documentation\/OSCKit\/Receiving-OSC"]]},"variants":[{"paths":["\/documentation\/osckit\/osc-value-parsing"],"traits":[{"interfaceLanguage":"swift"}]}],"abstract":[{"text":"Methods for parsing OSC Message value collections.","type":"text"}],"seeAlsoSections":[{"identifiers":["doc:\/\/osckit.OSCKit\/documentation\/OSCKit\/OSCMessage","doc:\/\/osckit.OSCKit\/documentation\/OSCKit\/OSC-Address-Pattern-Parsing","doc:\/\/osckit.OSCKit\/documentation\/OSCKit\/OSC-Value-Types"],"anchor":"OSC-Messages","generated":true,"title":"OSC Messages"}],"schemaVersion":{"minor":3,"major":0,"patch":0},"references":{"doc://osckit.OSCKit/documentation/OSCKit/OSCValueToken":{"type":"topic","abstract":[{"type":"reference","identifier":"doc:\/\/osckit.OSCKit\/documentation\/OSCKit\/OSCValue","isActive":true},{"text":" type tokens, including optional variants and opaque types.","type":"text"},{"type":"text","text":" "},{"text":"Useful for abstractions that mask sequences of values.","type":"text"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"OSCValueToken"}],"title":"OSCValueToken","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"text":"OSCValueToken","kind":"identifier"}],"url":"\/documentation\/osckit\/oscvaluetoken","identifier":"doc:\/\/osckit.OSCKit\/documentation\/OSCKit\/OSCValueToken","kind":"symbol"},"doc://osckit.OSCKit/documentation/OSCKit/OSC-Value-Types":{"role":"collectionGroup","identifier":"doc:\/\/osckit.OSCKit\/documentation\/OSCKit\/OSC-Value-Types","title":"OSC Value Types","abstract":[{"type":"text","text":"OSC Message value types."}],"kind":"article","url":"\/documentation\/osckit\/osc-value-types","type":"topic"},"doc://osckit.OSCKit/documentation/OSCKit/Receiving-OSC":{"kind":"article","type":"topic","title":"Receiving OSC","identifier":"doc:\/\/osckit.OSCKit\/documentation\/OSCKit\/Receiving-OSC","role":"collectionGroup","abstract":[{"type":"text","text":"Receiving OSC messages and bundles."}],"url":"\/documentation\/osckit\/receiving-osc"},"doc://osckit.OSCKit/documentation/OSCKit":{"url":"\/documentation\/osckit","title":"OSCKit","abstract":[{"text":"Open Sound Control (OSC) library for macOS, iOS and tvOS.","type":"text"}],"role":"collection","kind":"symbol","type":"topic","identifier":"doc:\/\/osckit.OSCKit\/documentation\/OSCKit"},"doc://osckit.OSCKit/documentation/OSCKit/OSCValueMaskError":{"role":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"text":"OSCValueMaskError","kind":"identifier"}],"identifier":"doc:\/\/osckit.OSCKit\/documentation\/OSCKit\/OSCValueMaskError","type":"topic","navigatorTitle":[{"kind":"identifier","text":"OSCValueMaskError"}],"abstract":[{"type":"text","text":"Error thrown by "},{"isActive":true,"type":"reference","identifier":"doc:\/\/osckit.OSCKit\/documentation\/OSCKit\/OSCValues"},{"type":"text","text":" "},{"type":"codeVoice","code":"masked(...)"},{"type":"text","text":" methods."}],"kind":"symbol","title":"OSCValueMaskError","url":"\/documentation\/osckit\/oscvaluemaskerror"},"doc://osckit.OSCKit/documentation/OSCKit/OSC-Address-Pattern-Parsing":{"kind":"article","type":"topic","title":"OSC Address Pattern Parsing","identifier":"doc:\/\/osckit.OSCKit\/documentation\/OSCKit\/OSC-Address-Pattern-Parsing","role":"collectionGroup","abstract":[{"type":"text","text":"Methods for parsing OSC Message address patterns."}],"url":"\/documentation\/osckit\/osc-address-pattern-parsing"},"doc://osckit.OSCKit/documentation/OSCKit/OSCMessage":{"navigatorTitle":[{"text":"OSCMessage","kind":"identifier"}],"url":"\/documentation\/osckit\/oscmessage","identifier":"doc:\/\/osckit.OSCKit\/documentation\/OSCKit\/OSCMessage","role":"symbol","type":"topic","abstract":[{"text":"OSC Message.","type":"text"}],"kind":"symbol","title":"OSCMessage","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"OSCMessage","kind":"identifier"}]},"doc://osckit.OSCKit/documentation/OSCKit/OSCValue":{"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"OSCValue"}],"title":"OSCValue","role":"symbol","navigatorTitle":[{"text":"OSCValue","kind":"identifier"}],"url":"\/documentation\/osckit\/oscvalue","identifier":"doc:\/\/osckit.OSCKit\/documentation\/OSCKit\/OSCValue","abstract":[{"type":"text","text":"Protocol to which all compatible OSC value types conform."}],"kind":"symbol","type":"topic"},"doc://osckit.OSCKit/documentation/OSCKit/OSCValues":{"type":"topic","identifier":"doc:\/\/osckit.OSCKit\/documentation\/OSCKit\/OSCValues","title":"OSCValues","abstract":[],"url":"\/documentation\/osckit\/oscvalues","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"typealias"},{"text":" ","kind":"text"},{"kind":"identifier","text":"OSCValues"}],"navigatorTitle":[{"kind":"identifier","text":"OSCValues"}]}}}