{"seeAlsoSections":[{"title":"OSC Messages","identifiers":["doc:\/\/OSCKit\/documentation\/OSCKit\/OSCMessage","doc:\/\/OSCKit\/documentation\/OSCKit\/OSC-Address-Pattern-Parsing","doc:\/\/OSCKit\/documentation\/OSCKit\/OSC-Value-Types"],"generated":true}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"primaryContentSections":[{"kind":"content","content":[{"anchor":"Using-masked-to-validate-and-unwrap-expected-value-types","level":3,"type":"heading","text":"Using masked() to validate and unwrap expected value types"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Since local OSC “addresses” (OSC Methods) are generally considered methods (akin to functions) which take parameters (OSC values\/arguments), in most use cases an OSC Method will have a defined type mask. OSCKit provides a powerful and flexible API to both validate and strongly type an OSC value array."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Validate and unwrap value array with expected member "},{"type":"codeVoice","code":"String"},{"type":"text","text":":"}]},{"type":"codeListing","syntax":"swift","code":["let str = try oscMessage.values.masked(String.self)","print(\"string: \\(str)\")"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The special wrapper type "},{"type":"codeVoice","code":"AnyOSCNumberValue"},{"type":"text","text":" is able to match any number and provides easy type-erased access to its contents, converting value types if necessary automatically."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Validate and unwrap value array with expected members "},{"type":"codeVoice","code":"String, Int, <number>?"},{"type":"text","text":":"}]},{"type":"codeListing","syntax":"swift","code":["let (str, int, num) = try oscMessage.values.masked(","    String.self, Int.self, AnyOSCNumberValue?.self",")","print(str, int, num?.intValue)","print(str, int, num?.doubleValue)","print(str, int, num?.base) \/\/ access to the strongly typed integer or floating-point value"]},{"anchor":"Using-matchesmask-to-test-for-a-mask-with-type-tokens","level":3,"type":"heading","text":"Using matches(mask:) to test for a mask with type tokens"},{"type":"paragraph","inlineContent":[{"type":"text","text":"If value unwrapping is not needed, a mere test of value types in an OSC value sequence can be done using a mask of "},{"type":"reference","isActive":true,"identifier":"doc:\/\/OSCKit\/documentation\/OSCKit\/OSCValueToken"},{"type":"text","text":" tokens."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"This can be useful at barriers in more complex codebases where early return or error-throwing due to mismatching value masks may be wanted before the values are ever unwrapped and statically typed."}]},{"type":"codeListing","syntax":"swift","code":["\/\/ [String, Int, AnyOSCNumberValue?]","guard oscMessage.values.matches(","    mask: [.string, .int, .numberOptional]",") else { return }"]},{"anchor":"Manually-unwrapping-expected-value-types","level":3,"type":"heading","text":"Manually unwrapping expected value types"},{"type":"paragraph","inlineContent":[{"type":"text","text":"It is generally easier to use "},{"type":"codeVoice","code":"masked()"},{"type":"text","text":" as demonstrated above, since it handles masking, strongly typing, as well as translation of interpolated ("},{"type":"codeVoice","code":"Int8"},{"type":"text","text":", "},{"type":"codeVoice","code":"Int16"},{"type":"text","text":", etc.) and opaque ("},{"type":"codeVoice","code":"AnyOSCNumberValue"},{"type":"text","text":", etc.) types. However the following is generally functionally equivalent."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Validate and unwrap value array with expected member "},{"type":"codeVoice","code":"String"},{"type":"text","text":":"}]},{"type":"codeListing","syntax":"swift","code":["guard oscMessage.values.count == 1 else { ... }","guard let str = oscMessage.values[0] as? String else { ... } \/\/ compulsory","print(str) \/\/ String"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Validate and unwrap value array with expected members "},{"type":"codeVoice","code":"String, Int32?, Double?"},{"type":"text","text":":"}]},{"type":"codeListing","syntax":"swift","code":["guard (1...3).contains(oscMessage.values.count) else { ... }","guard let str = oscMessage.values[0] as? String else { ... } \/\/ compulsory","let int: Int32? = oscMessage.count > 1 ? oscMessage.values[1] as? Int32 : nil \/\/ optional","let dbl: Double? = oscMessage.count > 2 ? oscMessage.values[2] as? Double : nil \/\/ optional","print(str, int, dbl) \/\/ String, Int32?, Double?"]},{"anchor":"Parsing-a-variable-number-of-values","level":3,"type":"heading","text":"Parsing a variable number of values"},{"type":"paragraph","inlineContent":[{"type":"text","text":"It may be desired to imperatively validate and cast values when their expected mask may be unknown."}]},{"type":"codeListing","syntax":"swift","code":["oscMessage.values.forEach { oscValue in","    switch oscValue {","    case let val as String:","        print(val)","    case let val as Int32:","        print(val)","    default:","        \/\/ unhandled","    }","}"]},{"anchor":"","level":2,"type":"heading","text":""}]}],"variants":[{"paths":["\/documentation\/osckit\/osc-value-parsing"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/OSCKit\/documentation\/OSCKit\/OSC-Value-Parsing","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Methods for parsing OSC Message value collections."}],"kind":"article","metadata":{"modules":[{"name":"OSCKit"}],"role":"collectionGroup","title":"OSC Value Parsing"},"hierarchy":{"paths":[["doc:\/\/OSCKit\/documentation\/OSCKit"],["doc:\/\/OSCKit\/documentation\/OSCKit","doc:\/\/OSCKit\/documentation\/OSCKit\/Receiving-OSC"]]},"topicSections":[{"identifiers":["doc:\/\/OSCKit\/documentation\/OSCKit\/OSCValueToken","doc:\/\/OSCKit\/documentation\/OSCKit\/OSCValueMaskError"]}],"references":{"doc://OSCKit/documentation/OSCKit/OSCValue":{"role":"symbol","title":"OSCValue","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"OSCValue"}],"abstract":[{"type":"text","text":"Protocol to which all compatible OSC value types conform."}],"identifier":"doc:\/\/OSCKit\/documentation\/OSCKit\/OSCValue","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"OSCValue"}],"url":"\/documentation\/osckit\/oscvalue"},"doc://OSCKit/documentation/OSCKit/OSC-Address-Pattern-Parsing":{"role":"collectionGroup","title":"OSC Address Pattern Parsing","abstract":[{"type":"text","text":"Methods for parsing OSC Message address patterns."}],"identifier":"doc:\/\/OSCKit\/documentation\/OSCKit\/OSC-Address-Pattern-Parsing","kind":"article","type":"topic","url":"\/documentation\/osckit\/osc-address-pattern-parsing"},"doc://OSCKit/documentation/OSCKit/Receiving-OSC":{"role":"collectionGroup","title":"Receiving OSC","abstract":[{"type":"text","text":"Receiving OSC messages and bundles."}],"identifier":"doc:\/\/OSCKit\/documentation\/OSCKit\/Receiving-OSC","kind":"article","type":"topic","url":"\/documentation\/osckit\/receiving-osc"},"doc://OSCKit/documentation/OSCKit":{"role":"collection","title":"OSCKit","abstract":[{"type":"text","text":"Open Sound Control (OSC) library for macOS, iOS and tvOS."}],"identifier":"doc:\/\/OSCKit\/documentation\/OSCKit","kind":"symbol","type":"topic","url":"\/documentation\/osckit"},"doc://OSCKit/documentation/OSCKit/OSC-Value-Types":{"role":"collectionGroup","title":"OSC Value Types","abstract":[{"type":"text","text":"OSC Message value types."}],"identifier":"doc:\/\/OSCKit\/documentation\/OSCKit\/OSC-Value-Types","kind":"article","type":"topic","url":"\/documentation\/osckit\/osc-value-types"},"doc://OSCKit/documentation/OSCKit/OSCValueMaskError":{"role":"symbol","title":"OSCValueMaskError","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"OSCValueMaskError"}],"abstract":[{"type":"text","text":"Error thrown by "},{"type":"reference","isActive":true,"identifier":"doc:\/\/OSCKit\/documentation\/OSCKit\/OSCValues"},{"type":"text","text":" "},{"type":"codeVoice","code":"masked(...)"},{"type":"text","text":" methods."}],"identifier":"doc:\/\/OSCKit\/documentation\/OSCKit\/OSCValueMaskError","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"OSCValueMaskError"}],"url":"\/documentation\/osckit\/oscvaluemaskerror"},"doc://OSCKit/documentation/OSCKit/OSCValues":{"role":"symbol","title":"OSCValues","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"OSCValues"}],"abstract":[],"identifier":"doc:\/\/OSCKit\/documentation\/OSCKit\/OSCValues","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"OSCValues"}],"url":"\/documentation\/osckit\/oscvalues"},"doc://OSCKit/documentation/OSCKit/OSCValueToken":{"role":"symbol","title":"OSCValueToken","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"OSCValueToken"}],"abstract":[{"type":"reference","isActive":true,"identifier":"doc:\/\/OSCKit\/documentation\/OSCKit\/OSCValue"},{"type":"text","text":" type tokens, including optional variants and opaque types."},{"type":"text","text":" "},{"type":"text","text":"Useful for abstractions that mask sequences of values."}],"identifier":"doc:\/\/OSCKit\/documentation\/OSCKit\/OSCValueToken","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"OSCValueToken"}],"url":"\/documentation\/osckit\/oscvaluetoken"},"doc://OSCKit/documentation/OSCKit/OSCMessage":{"role":"symbol","title":"OSCMessage","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"OSCMessage"}],"abstract":[{"type":"text","text":"OSC Message."}],"identifier":"doc:\/\/OSCKit\/documentation\/OSCKit\/OSCMessage","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"OSCMessage"}],"url":"\/documentation\/osckit\/oscmessage"}}}