{"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"masked"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"V0"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"V1"},{"kind":"text","text":", "},{"text":"V2","kind":"genericParameter"},{"kind":"text","text":", "},{"text":"V3","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"V4","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"v0","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"V0","kind":"typeIdentifier"},{"text":".Type, ","kind":"text"},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"v1"},{"kind":"text","text":": "},{"text":"V1","kind":"typeIdentifier"},{"text":".Type, ","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"v2","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"V2","kind":"typeIdentifier"},{"text":".Type, ","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"v3"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"V3"},{"kind":"text","text":"?.Type, "},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"v4"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"V4"},{"kind":"text","text":"?.Type) "},{"kind":"keyword","text":"throws"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"OSCValueMaskError","preciseIdentifier":"s:10OSCKitCore17OSCValueMaskErrorO","identifier":"doc:\/\/osckit.OSCKit\/documentation\/OSCKit\/OSCValueMaskError"},{"kind":"text","text":") -> ("},{"text":"V0","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"V1","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"V2"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"V3"},{"text":"?, ","kind":"text"},{"text":"V4","kind":"typeIdentifier"},{"text":"?) ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"V0","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"OSCValueMaskable","kind":"typeIdentifier","identifier":"doc:\/\/osckit.OSCKit\/documentation\/OSCKit\/OSCValueMaskable","preciseIdentifier":"s:10OSCKitCore16OSCValueMaskableP"},{"text":", ","kind":"text"},{"text":"V1","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"OSCValueMaskable","kind":"typeIdentifier","identifier":"doc:\/\/osckit.OSCKit\/documentation\/OSCKit\/OSCValueMaskable","preciseIdentifier":"s:10OSCKitCore16OSCValueMaskableP"},{"text":", ","kind":"text"},{"text":"V2","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"OSCValueMaskable","kind":"typeIdentifier","identifier":"doc:\/\/osckit.OSCKit\/documentation\/OSCKit\/OSCValueMaskable","preciseIdentifier":"s:10OSCKitCore16OSCValueMaskableP"},{"text":", ","kind":"text"},{"text":"V3","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"OSCValueMaskable","kind":"typeIdentifier","identifier":"doc:\/\/osckit.OSCKit\/documentation\/OSCKit\/OSCValueMaskable","preciseIdentifier":"s:10OSCKitCore16OSCValueMaskableP"},{"text":", ","kind":"text"},{"text":"V4","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"OSCValueMaskable","kind":"typeIdentifier","identifier":"doc:\/\/osckit.OSCKit\/documentation\/OSCKit\/OSCValueMaskable","preciseIdentifier":"s:10OSCKitCore16OSCValueMaskableP"}],"languages":["swift"]}]},{"kind":"content","content":[{"anchor":"discussion","type":"heading","level":2,"text":"Discussion"},{"type":"paragraph","inlineContent":[{"text":"A mask of up to 10 value types in sequence.","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"Common usage:","type":"text"}]},{"type":"codeListing","syntax":"swift","code":["\/\/ as a tuple","let tuple = try values.masked(String.self, Int.self)","print(tuple.0, tuple.1)","","\/\/ unwrapped into local variables","let (string, int) = try values.masked(String.self, Int.self)","print(string, int)"]},{"inlineContent":[{"text":"Basic examples:","type":"text"}],"type":"paragraph"},{"type":"codeListing","code":["\/\/ present optional value","[\"Test\", 123, Int32(456)].masked(String.self, Int32.self, Int32?.self)","tuple.0 \/\/ \"Test\" as String","tuple.1 \/\/ 123 as Int","tuple.2 \/\/ 456 as Int32?","","\/\/ missing optional value","[\"Test\", 123].masked(String.self, Int32.self, Int32?.self)","tuple.0 \/\/ \"Test\" as String","tuple.1 \/\/ 123 as Int","tuple.2 \/\/ nil as Int32?","","\/\/ mismatching types","[123, 456].masked(String.self, Int32.self)","\/\/ throws OSCValueMaskError.mismatchedTypes","","\/\/ mismatched element count, regardless of types","[123, 456].masked(String.self, Int32.self, Int32.self)","\/\/ throws OSCValueMaskError.invalidCount"],"syntax":"swift"},{"inlineContent":[{"type":"codeVoice","code":"Int.self"},{"type":"text","text":" is a special common-use interpolated type for convenience:"}],"type":"paragraph"},{"type":"codeListing","code":["\/\/ any integer may match against Int.self and is converted to Int","[Int32(123) Int64(456)].masked(Int.self, Int.self)","tuple.0 \/\/ 123 as Int","tuple.1 \/\/ 456 as Int","","\/\/ all other integer types must match themself exactly","[Int32(123) Int64(456)].masked(Int32.self, Int32.self)","\/\/ throws error; mask does not match","","\/\/ same with optionals; specific integer types must match if present","[123, 456, 789].masked(String.self, Int.self, Int32?.self)","\/\/ throws error; mask does not match"],"syntax":"swift"},{"inlineContent":[{"type":"text","text":"In addition to core OSC concrete types, various non-standard OSC types can be used and will"},{"type":"text","text":" "},{"type":"text","text":"be transparently encoded as their closest related OSC core type when encoding in an"},{"type":"text","text":" "},{"identifier":"doc:\/\/osckit.OSCKit\/documentation\/OSCKit\/OSCMessage","isActive":true,"type":"reference"},{"type":"text","text":"."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"These types conform to the "},{"identifier":"doc:\/\/osckit.OSCKit\/documentation\/OSCKit\/OSCInterpolatedValue","isActive":true,"type":"reference"},{"type":"text","text":" protocol (which defines their core"},{"type":"text","text":" "},{"type":"text","text":"encoding value type) and may be used any where "},{"identifier":"doc:\/\/osckit.OSCKit\/documentation\/OSCKit\/OSCValue","isActive":true,"type":"reference"},{"type":"text","text":" is accepted."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"OSCKit provides conformance for a number of such common Swift Standard Library types:"},{"type":"text","text":" "},{"type":"codeVoice","code":"Int8"},{"type":"text","text":", "},{"type":"codeVoice","code":"Int16"},{"type":"text","text":", "},{"type":"codeVoice","code":"UInt"},{"type":"text","text":", "},{"type":"codeVoice","code":"UInt8"},{"type":"text","text":", "},{"type":"codeVoice","code":"UInt16"},{"type":"text","text":", "},{"type":"codeVoice","code":"UInt32"},{"type":"text","text":", "},{"type":"codeVoice","code":"UInt64"},{"type":"text","text":", "},{"type":"codeVoice","code":"Float16"},{"type":"text","text":", "},{"type":"codeVoice","code":"Float80"},{"type":"text","text":"."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"(Note that "},{"type":"codeVoice","code":"Int32"},{"type":"text","text":", "},{"type":"codeVoice","code":"Int64"},{"type":"text","text":", "},{"type":"codeVoice","code":"Float32"},{"type":"text","text":" are already core "},{"type":"codeVoice","code":"OSCValue"},{"type":"text","text":" types.)"}],"type":"paragraph"},{"type":"codeListing","code":["let values: OSCValues = [Int8(123), Int16(123)]"],"syntax":"swift"},{"inlineContent":[{"type":"codeVoice","code":"AnyOSCNumberValue"},{"type":"text","text":" is a special type to match and box any OSC numeric value."}],"type":"paragraph"},{"type":"codeListing","code":["[Int8(123)]","    .masked(AnyOSCNumberValue.self)","    \/\/ (AnyOSCNumberValue(Int8(123)))","","[Double(123.45)]","    .masked(AnyOSCNumberValue.self)","    \/\/ (AnyOSCNumberValue(Double(123.45)))","","\/\/ which can be accessed as either typed:","AnyOSCNumberValue(Int8(123)).base \/\/ .int(Int8)","","\/\/ or interpolated:","AnyOSCNumberValue(Int8(123)).intValue \/\/ 123 as Int","AnyOSCNumberValue(Int8(123)).doubleValue \/\/ 123.0 as Double"],"syntax":"swift"},{"inlineContent":[{"type":"text","text":"One or more trailing types can also be expressed as as an "},{"type":"codeVoice","code":"Optional"},{"type":"text","text":" (ie: "},{"type":"codeVoice","code":"Int32?.self"},{"type":"text","text":")"},{"type":"text","text":" "},{"type":"text","text":"which will match that value type or return "},{"type":"codeVoice","code":"nil"},{"type":"text","text":" if the value is missing in the base value"},{"type":"text","text":" "},{"type":"text","text":"array."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"Core OSC concrete types:"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"Int32.self"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"Float32.self"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"String.self"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"Data.self"},{"type":"text","text":" (a.k.a. OSC blob)"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"OSCTimeTag.self"}]}]}]},{"inlineContent":[{"type":"text","text":"Extended (non-standard) OSC concrete types:"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"Bool.self"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"Character.self"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"Int64.self"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"Double.self"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"OSCArrayValue.self"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"OSCImpulseValue.self"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"OSCMIDIValue.self"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"OSCNullValue.self"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"OSCStringAltValue.self"}]}]}]},{"inlineContent":[{"type":"text","text":"Interpolating concrete types for convenience:"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"Int.self"},{"type":"text","text":" (converts from any OSC integer types)"}]}]}]},{"inlineContent":[{"type":"text","text":"Opaque types:"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"AnyOSCNumberValue.self"},{"type":"text","text":" (boxes any OSC integer or float number)"}]}]}]},{"type":"aside","name":"Throws","style":"note","content":[{"type":"paragraph","inlineContent":[{"text":"","type":"text"},{"identifier":"doc:\/\/osckit.OSCKit\/documentation\/OSCKit\/OSCValueMaskError","isActive":true,"type":"reference"}]}]}]}],"variants":[{"paths":["\/documentation\/osckit\/swift\/array\/masked(_:_:_:_:_:)-3sh2g"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/osckit.OSCKit\/documentation\/OSCKit","doc:\/\/osckit.OSCKit\/documentation\/OSCKit\/Swift","doc:\/\/osckit.OSCKit\/documentation\/OSCKit\/Swift\/Array"]]},"kind":"symbol","sections":[],"schemaVersion":{"major":0,"patch":0,"minor":3},"metadata":{"symbolKind":"method","title":"masked(_:_:_:_:_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"masked"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"V0"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"V1"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"V2"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"V3"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"V4"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"V0"},{"kind":"text","text":".Type, "},{"kind":"typeIdentifier","text":"V1"},{"kind":"text","text":".Type, "},{"kind":"typeIdentifier","text":"V2"},{"kind":"text","text":".Type, "},{"kind":"typeIdentifier","text":"V3"},{"kind":"text","text":"?.Type, "},{"kind":"typeIdentifier","text":"V4"},{"kind":"text","text":"?.Type) "},{"kind":"keyword","text":"throws"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:10OSCKitCore17OSCValueMaskErrorO","text":"OSCValueMaskError"},{"kind":"text","text":") -> ("},{"kind":"typeIdentifier","text":"V0"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"V1"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"V2"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"V3"},{"kind":"text","text":"?, "},{"kind":"typeIdentifier","text":"V4"},{"kind":"text","text":"?)"}],"externalID":"s:Sa10OSCKitCoreAA8OSCValue_pRszlE6maskedyqd___qd_0_qd_1_qd_2_Sgqd_3_Sgtqd__m_qd_0_mqd_1_mADmAEmtAA0C9MaskErrorOYKAA0C8MaskableRd__AaHRd_0_AaHRd_1_AaHRd_2_AaHRd_3_r3_lF","extendedModule":"Swift","roleHeading":"Instance Method","role":"symbol","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Element"},{"type":"text","text":" is "},{"type":"codeVoice","code":"any OSCValue"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"modules":[{"name":"OSCKit","relatedModules":["Swift"]}]},"identifier":{"url":"doc:\/\/osckit.OSCKit\/documentation\/OSCKit\/Swift\/Array\/masked(_:_:_:_:_:)-3sh2g","interfaceLanguage":"swift"},"abstract":[{"text":"Returns the OSC value sequence as a strongly typed tuple","type":"text"},{"type":"text","text":" "},{"text":"if it matches the given mask of concrete value types.","type":"text"},{"text":" ","type":"text"},{"text":"If the value types do not match the mask, an error is thrown.","type":"text"}],"references":{"doc://osckit.OSCKit/documentation/OSCKit/Swift":{"identifier":"doc:\/\/osckit.OSCKit\/documentation\/OSCKit\/Swift","role":"collection","type":"topic","kind":"symbol","url":"\/documentation\/osckit\/swift","abstract":[],"title":"Swift"},"doc://osckit.OSCKit/documentation/OSCKit":{"url":"\/documentation\/osckit","identifier":"doc:\/\/osckit.OSCKit\/documentation\/OSCKit","abstract":[{"text":"Open Sound Control (OSC) library for macOS, iOS, tvOS and visionOS.","type":"text"}],"type":"topic","kind":"symbol","title":"OSCKit","role":"collection"},"doc://osckit.OSCKit/documentation/OSCKit/Swift/Array":{"identifier":"doc:\/\/osckit.OSCKit\/documentation\/OSCKit\/Swift\/Array","role":"symbol","type":"topic","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Array"}],"fragments":[{"kind":"keyword","text":"extension"},{"kind":"text","text":" "},{"kind":"identifier","text":"Array","preciseIdentifier":"s:Sa"}],"url":"\/documentation\/osckit\/swift\/array","abstract":[],"title":"Array"},"doc://osckit.OSCKit/documentation/OSCKit/OSCValues":{"abstract":[],"kind":"symbol","role":"symbol","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"OSCValues","kind":"identifier"}],"type":"topic","navigatorTitle":[{"text":"OSCValues","kind":"identifier"}],"identifier":"doc:\/\/osckit.OSCKit\/documentation\/OSCKit\/OSCValues","url":"\/documentation\/osckit\/oscvalues","title":"OSCValues"},"doc://osckit.OSCKit/documentation/OSCKit/OSCValueMaskable":{"identifier":"doc:\/\/osckit.OSCKit\/documentation\/OSCKit\/OSCValueMaskable","role":"symbol","type":"topic","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"OSCValueMaskable"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"OSCValueMaskable"}],"url":"\/documentation\/osckit\/oscvaluemaskable","abstract":[{"type":"text","text":"Protocol which all maskable "},{"type":"reference","identifier":"doc:\/\/osckit.OSCKit\/documentation\/OSCKit\/OSCValue","isActive":true},{"type":"text","text":" types conform."}],"title":"OSCValueMaskable"},"doc://osckit.OSCKit/documentation/OSCKit/OSCMessage":{"identifier":"doc:\/\/osckit.OSCKit\/documentation\/OSCKit\/OSCMessage","role":"symbol","type":"topic","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"OSCMessage"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"OSCMessage"}],"url":"\/documentation\/osckit\/oscmessage","abstract":[{"type":"text","text":"OSC Message."}],"title":"OSCMessage"},"doc://osckit.OSCKit/documentation/OSCKit/OSCValueMaskError":{"identifier":"doc:\/\/osckit.OSCKit\/documentation\/OSCKit\/OSCValueMaskError","role":"symbol","type":"topic","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"OSCValueMaskError"}],"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"OSCValueMaskError"}],"url":"\/documentation\/osckit\/oscvaluemaskerror","abstract":[{"type":"text","text":"Error thrown by "},{"type":"reference","identifier":"doc:\/\/osckit.OSCKit\/documentation\/OSCKit\/OSCValues","isActive":true},{"type":"text","text":" "},{"type":"codeVoice","code":"masked(...)"},{"type":"text","text":" methods."}],"title":"OSCValueMaskError"},"doc://osckit.OSCKit/documentation/OSCKit/Swift/Array/masked(_:_:_:_:_:)-3sh2g":{"identifier":"doc:\/\/osckit.OSCKit\/documentation\/OSCKit\/Swift\/Array\/masked(_:_:_:_:_:)-3sh2g","url":"\/documentation\/osckit\/swift\/array\/masked(_:_:_:_:_:)-3sh2g","title":"masked(_:_:_:_:_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"masked","kind":"identifier"},{"text":"<","kind":"text"},{"text":"V0","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"V1","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"V2","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"V3","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"V4","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"V0","kind":"typeIdentifier"},{"text":".Type, ","kind":"text"},{"text":"V1","kind":"typeIdentifier"},{"text":".Type, ","kind":"text"},{"text":"V2","kind":"typeIdentifier"},{"text":".Type, ","kind":"text"},{"text":"V3","kind":"typeIdentifier"},{"text":"?.Type, ","kind":"text"},{"text":"V4","kind":"typeIdentifier"},{"text":"?.Type) ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":"(","kind":"text"},{"text":"OSCValueMaskError","kind":"typeIdentifier","preciseIdentifier":"s:10OSCKitCore17OSCValueMaskErrorO"},{"text":") -> (","kind":"text"},{"text":"V0","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"V1","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"V2","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"V3","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"text":"V4","kind":"typeIdentifier"},{"text":"?)","kind":"text"}],"conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Element"},{"type":"text","text":" is "},{"type":"codeVoice","code":"any OSCValue"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"type":"topic","abstract":[{"type":"text","text":"Returns the OSC value sequence as a strongly typed tuple"},{"type":"text","text":" "},{"type":"text","text":"if it matches the given mask of concrete value types."},{"type":"text","text":" "},{"type":"text","text":"If the value types do not match the mask, an error is thrown."}],"role":"symbol","kind":"symbol"},"doc://osckit.OSCKit/documentation/OSCKit/OSCInterpolatedValue":{"identifier":"doc:\/\/osckit.OSCKit\/documentation\/OSCKit\/OSCInterpolatedValue","role":"symbol","type":"topic","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"OSCInterpolatedValue"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"OSCInterpolatedValue"}],"url":"\/documentation\/osckit\/oscinterpolatedvalue","abstract":[{"type":"text","text":"Protocol to which all interpolated OSC value types conform."},{"type":"text","text":" "},{"type":"text","text":"This includes all convenience types that are not themselves core OSC value types."}],"title":"OSCInterpolatedValue"},"doc://osckit.OSCKit/documentation/OSCKit/OSCValue":{"url":"\/documentation\/osckit\/oscvalue","identifier":"doc:\/\/osckit.OSCKit\/documentation\/OSCKit\/OSCValue","abstract":[{"type":"text","text":"Protocol to which all compatible OSC value types conform."}],"kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"OSCValue"}],"title":"OSCValue","navigatorTitle":[{"kind":"identifier","text":"OSCValue"}],"role":"symbol"}}}