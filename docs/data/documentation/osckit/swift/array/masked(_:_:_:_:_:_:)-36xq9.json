{"abstract":[{"text":"Returns the OSC value sequence as a strongly typed tuple","type":"text"},{"text":" ","type":"text"},{"text":"if it matches the given mask of concrete value types.","type":"text"},{"text":" ","type":"text"},{"text":"If the value types do not match the mask, an error is thrown.","type":"text"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/osckit\/swift\/array\/masked(_:_:_:_:_:_:)-36xq9"]}],"metadata":{"externalID":"s:Sa10OSCKitCoreAA8OSCValue_pRszlE6maskedyqd__Sg_qd_0_Sgqd_1_Sgqd_2_Sgqd_3_Sgqd_4_SgtADm_AEmAFmAGmAHmAImtAA0C9MaskErrorOYKAA0C8MaskableRd__AaLRd_0_AaLRd_1_AaLRd_2_AaLRd_3_AaLRd_4_r4_lF","symbolKind":"method","roleHeading":"Instance Method","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"code":"Element","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"any OSCValue","type":"codeVoice"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"role":"symbol","extendedModule":"Swift","modules":[{"name":"OSCKit","relatedModules":["Swift"]}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"masked","kind":"identifier"},{"text":"<","kind":"text"},{"text":"V0","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"V1","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"V2","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"V3","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"V4","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"V5","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"V0","kind":"typeIdentifier"},{"text":"?.Type, ","kind":"text"},{"text":"V1","kind":"typeIdentifier"},{"text":"?.Type, ","kind":"text"},{"text":"V2","kind":"typeIdentifier"},{"text":"?.Type, ","kind":"text"},{"text":"V3","kind":"typeIdentifier"},{"text":"?.Type, ","kind":"text"},{"text":"V4","kind":"typeIdentifier"},{"text":"?.Type, ","kind":"text"},{"text":"V5","kind":"typeIdentifier"},{"text":"?.Type) ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":"(","kind":"text"},{"text":"OSCValueMaskError","kind":"typeIdentifier","preciseIdentifier":"s:10OSCKitCore17OSCValueMaskErrorO"},{"text":") -> (","kind":"text"},{"text":"V0","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"text":"V1","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"text":"V2","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"text":"V3","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"text":"V4","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"text":"V5","kind":"typeIdentifier"},{"text":"?)","kind":"text"}],"title":"masked(_:_:_:_:_:_:)"},"hierarchy":{"paths":[["doc:\/\/osckit.OSCKit\/documentation\/OSCKit","doc:\/\/osckit.OSCKit\/documentation\/OSCKit\/Swift","doc:\/\/osckit.OSCKit\/documentation\/OSCKit\/Swift\/Array"]]},"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"masked"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"V0"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"V1"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"V2"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"V3"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"V4"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"V5"},{"kind":"text","text":">("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"v0"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"V0"},{"kind":"text","text":"?.Type, "},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"v1"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"V1"},{"kind":"text","text":"?.Type, "},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"v2"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"V2"},{"kind":"text","text":"?.Type, "},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"v3"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"V3"},{"kind":"text","text":"?.Type, "},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"v4"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"V4"},{"kind":"text","text":"?.Type, "},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"v5"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"V5"},{"kind":"text","text":"?.Type) "},{"kind":"keyword","text":"throws"},{"kind":"text","text":"("},{"kind":"typeIdentifier","identifier":"doc:\/\/osckit.OSCKit\/documentation\/OSCKit\/OSCValueMaskError","text":"OSCValueMaskError","preciseIdentifier":"s:10OSCKitCore17OSCValueMaskErrorO"},{"kind":"text","text":") -> ("},{"kind":"typeIdentifier","text":"V0"},{"kind":"text","text":"?, "},{"kind":"typeIdentifier","text":"V1"},{"kind":"text","text":"?, "},{"kind":"typeIdentifier","text":"V2"},{"kind":"text","text":"?, "},{"kind":"typeIdentifier","text":"V3"},{"kind":"text","text":"?, "},{"kind":"typeIdentifier","text":"V4"},{"kind":"text","text":"?, "},{"kind":"typeIdentifier","text":"V5"},{"kind":"text","text":"?) "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"V0"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","identifier":"doc:\/\/osckit.OSCKit\/documentation\/OSCKit\/OSCValueMaskable","text":"OSCValueMaskable","preciseIdentifier":"s:10OSCKitCore16OSCValueMaskableP"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"V1"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","identifier":"doc:\/\/osckit.OSCKit\/documentation\/OSCKit\/OSCValueMaskable","text":"OSCValueMaskable","preciseIdentifier":"s:10OSCKitCore16OSCValueMaskableP"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"V2"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","identifier":"doc:\/\/osckit.OSCKit\/documentation\/OSCKit\/OSCValueMaskable","text":"OSCValueMaskable","preciseIdentifier":"s:10OSCKitCore16OSCValueMaskableP"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"V3"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","identifier":"doc:\/\/osckit.OSCKit\/documentation\/OSCKit\/OSCValueMaskable","text":"OSCValueMaskable","preciseIdentifier":"s:10OSCKitCore16OSCValueMaskableP"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"V4"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","identifier":"doc:\/\/osckit.OSCKit\/documentation\/OSCKit\/OSCValueMaskable","text":"OSCValueMaskable","preciseIdentifier":"s:10OSCKitCore16OSCValueMaskableP"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"V5"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","identifier":"doc:\/\/osckit.OSCKit\/documentation\/OSCKit\/OSCValueMaskable","text":"OSCValueMaskable","preciseIdentifier":"s:10OSCKitCore16OSCValueMaskableP"}]}]},{"content":[{"text":"Discussion","level":2,"type":"heading","anchor":"discussion"},{"inlineContent":[{"text":"A mask of up to 10 value types in sequence.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"text":"Common usage:","type":"text"}],"type":"paragraph"},{"type":"codeListing","code":["\/\/ as a tuple","let tuple = try values.masked(String.self, Int.self)","print(tuple.0, tuple.1)","","\/\/ unwrapped into local variables","let (string, int) = try values.masked(String.self, Int.self)","print(string, int)"],"syntax":"swift"},{"inlineContent":[{"text":"Basic examples:","type":"text"}],"type":"paragraph"},{"type":"codeListing","code":["\/\/ present optional value","[\"Test\", 123, Int32(456)].masked(String.self, Int32.self, Int32?.self)","tuple.0 \/\/ \"Test\" as String","tuple.1 \/\/ 123 as Int","tuple.2 \/\/ 456 as Int32?","","\/\/ missing optional value","[\"Test\", 123].masked(String.self, Int32.self, Int32?.self)","tuple.0 \/\/ \"Test\" as String","tuple.1 \/\/ 123 as Int","tuple.2 \/\/ nil as Int32?","","\/\/ mismatching types","[123, 456].masked(String.self, Int32.self)","\/\/ throws OSCValueMaskError.mismatchedTypes","","\/\/ mismatched element count, regardless of types","[123, 456].masked(String.self, Int32.self, Int32.self)","\/\/ throws OSCValueMaskError.invalidCount"],"syntax":"swift"},{"inlineContent":[{"code":"Int.self","type":"codeVoice"},{"text":" is a special common-use interpolated type for convenience:","type":"text"}],"type":"paragraph"},{"type":"codeListing","code":["\/\/ any integer may match against Int.self and is converted to Int","[Int32(123) Int64(456)].masked(Int.self, Int.self)","tuple.0 \/\/ 123 as Int","tuple.1 \/\/ 456 as Int","","\/\/ all other integer types must match themself exactly","[Int32(123) Int64(456)].masked(Int32.self, Int32.self)","\/\/ throws error; mask does not match","","\/\/ same with optionals; specific integer types must match if present","[123, 456, 789].masked(String.self, Int.self, Int32?.self)","\/\/ throws error; mask does not match"],"syntax":"swift"},{"inlineContent":[{"text":"In addition to core OSC concrete types, various non-standard OSC types can be used and will","type":"text"},{"text":" ","type":"text"},{"text":"be transparently encoded as their closest related OSC core type when encoding in an","type":"text"},{"text":" ","type":"text"},{"identifier":"doc:\/\/osckit.OSCKit\/documentation\/OSCKit\/OSCMessage","isActive":true,"type":"reference"},{"text":".","type":"text"}],"type":"paragraph"},{"inlineContent":[{"text":"These types conform to the ","type":"text"},{"identifier":"doc:\/\/osckit.OSCKit\/documentation\/OSCKit\/OSCInterpolatedValue","isActive":true,"type":"reference"},{"text":" protocol (which defines their core","type":"text"},{"text":" ","type":"text"},{"text":"encoding value type) and may be used any where ","type":"text"},{"identifier":"doc:\/\/osckit.OSCKit\/documentation\/OSCKit\/OSCValue","isActive":true,"type":"reference"},{"text":" is accepted.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"text":"OSCKit provides conformance for a number of such common Swift Standard Library types:","type":"text"},{"text":" ","type":"text"},{"code":"Int8","type":"codeVoice"},{"text":", ","type":"text"},{"code":"Int16","type":"codeVoice"},{"text":", ","type":"text"},{"code":"UInt","type":"codeVoice"},{"text":", ","type":"text"},{"code":"UInt8","type":"codeVoice"},{"text":", ","type":"text"},{"code":"UInt16","type":"codeVoice"},{"text":", ","type":"text"},{"code":"UInt32","type":"codeVoice"},{"text":", ","type":"text"},{"code":"UInt64","type":"codeVoice"},{"text":", ","type":"text"},{"code":"Float16","type":"codeVoice"},{"text":", ","type":"text"},{"code":"Float80","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"},{"inlineContent":[{"text":"(Note that ","type":"text"},{"code":"Int32","type":"codeVoice"},{"text":", ","type":"text"},{"code":"Int64","type":"codeVoice"},{"text":", ","type":"text"},{"code":"Float32","type":"codeVoice"},{"text":" are already core ","type":"text"},{"code":"OSCValue","type":"codeVoice"},{"text":" types.)","type":"text"}],"type":"paragraph"},{"type":"codeListing","code":["let values: OSCValues = [Int8(123), Int16(123)]"],"syntax":"swift"},{"inlineContent":[{"code":"AnyOSCNumberValue","type":"codeVoice"},{"text":" is a special type to match and box any OSC numeric value.","type":"text"}],"type":"paragraph"},{"type":"codeListing","code":["[Int8(123)]","    .masked(AnyOSCNumberValue.self)","    \/\/ (AnyOSCNumberValue(Int8(123)))","","[Double(123.45)]","    .masked(AnyOSCNumberValue.self)","    \/\/ (AnyOSCNumberValue(Double(123.45)))","","\/\/ which can be accessed as either typed:","AnyOSCNumberValue(Int8(123)).base \/\/ .int(Int8)","","\/\/ or interpolated:","AnyOSCNumberValue(Int8(123)).intValue \/\/ 123 as Int","AnyOSCNumberValue(Int8(123)).doubleValue \/\/ 123.0 as Double"],"syntax":"swift"},{"inlineContent":[{"text":"One or more trailing types can also be expressed as as an ","type":"text"},{"code":"Optional","type":"codeVoice"},{"text":" (ie: ","type":"text"},{"code":"Int32?.self","type":"codeVoice"},{"text":")","type":"text"},{"text":" ","type":"text"},{"text":"which will match that value type or return ","type":"text"},{"code":"nil","type":"codeVoice"},{"text":" if the value is missing in the base value","type":"text"},{"text":" ","type":"text"},{"text":"array.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"text":"Core OSC concrete types:","type":"text"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"Int32.self"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"Float32.self"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"String.self"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"Data.self"},{"type":"text","text":" (a.k.a. OSC blob)"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"OSCTimeTag.self"}]}]}]},{"inlineContent":[{"text":"Extended (non-standard) OSC concrete types:","type":"text"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"Bool.self"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"Character.self"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"Int64.self"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"Double.self"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"OSCArrayValue.self"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"OSCImpulseValue.self"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"OSCMIDIValue.self"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"OSCNullValue.self"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"OSCStringAltValue.self"}]}]}]},{"inlineContent":[{"text":"Interpolating concrete types for convenience:","type":"text"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"Int.self"},{"type":"text","text":" (converts from any OSC integer types)"}]}]}]},{"inlineContent":[{"text":"Opaque types:","type":"text"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"AnyOSCNumberValue.self"},{"type":"text","text":" (boxes any OSC integer or float number)"}]}]}]},{"content":[{"inlineContent":[{"type":"text","text":""},{"isActive":true,"type":"reference","identifier":"doc:\/\/osckit.OSCKit\/documentation\/OSCKit\/OSCValueMaskError"}],"type":"paragraph"}],"type":"aside","style":"note","name":"Throws"}],"kind":"content"}],"schemaVersion":{"patch":0,"major":0,"minor":3},"kind":"symbol","identifier":{"url":"doc:\/\/osckit.OSCKit\/documentation\/OSCKit\/Swift\/Array\/masked(_:_:_:_:_:_:)-36xq9","interfaceLanguage":"swift"},"references":{"doc://osckit.OSCKit/documentation/OSCKit/OSCValueMaskable":{"identifier":"doc:\/\/osckit.OSCKit\/documentation\/OSCKit\/OSCValueMaskable","type":"topic","navigatorTitle":[{"kind":"identifier","text":"OSCValueMaskable"}],"title":"OSCValueMaskable","url":"\/documentation\/osckit\/oscvaluemaskable","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"OSCValueMaskable"}],"kind":"symbol","abstract":[{"type":"text","text":"Protocol which all maskable "},{"isActive":true,"type":"reference","identifier":"doc:\/\/osckit.OSCKit\/documentation\/OSCKit\/OSCValue"},{"type":"text","text":" types conform."}],"role":"symbol"},"doc://osckit.OSCKit/documentation/OSCKit":{"type":"topic","identifier":"doc:\/\/osckit.OSCKit\/documentation\/OSCKit","url":"\/documentation\/osckit","title":"OSCKit","kind":"symbol","abstract":[{"type":"text","text":"Open Sound Control (OSC) library for macOS, iOS, tvOS and visionOS."}],"role":"collection"},"doc://osckit.OSCKit/documentation/OSCKit/Swift":{"type":"topic","identifier":"doc:\/\/osckit.OSCKit\/documentation\/OSCKit\/Swift","url":"\/documentation\/osckit\/swift","title":"Swift","kind":"symbol","abstract":[],"role":"collection"},"doc://osckit.OSCKit/documentation/OSCKit/Swift/Array/masked(_:_:_:_:_:_:)-36xq9":{"url":"\/documentation\/osckit\/swift\/array\/masked(_:_:_:_:_:_:)-36xq9","identifier":"doc:\/\/osckit.OSCKit\/documentation\/OSCKit\/Swift\/Array\/masked(_:_:_:_:_:_:)-36xq9","kind":"symbol","abstract":[{"text":"Returns the OSC value sequence as a strongly typed tuple","type":"text"},{"text":" ","type":"text"},{"text":"if it matches the given mask of concrete value types.","type":"text"},{"text":" ","type":"text"},{"text":"If the value types do not match the mask, an error is thrown.","type":"text"}],"role":"symbol","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"code":"Element","type":"codeVoice"},{"type":"text","text":" is "},{"code":"any OSCValue","type":"codeVoice"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"type":"topic","title":"masked(_:_:_:_:_:_:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"masked"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"V0"},{"text":", ","kind":"text"},{"text":"V1","kind":"genericParameter"},{"text":", ","kind":"text"},{"kind":"genericParameter","text":"V2"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"V3"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"V4"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"V5"},{"text":">(","kind":"text"},{"text":"V0","kind":"typeIdentifier"},{"kind":"text","text":"?.Type, "},{"text":"V1","kind":"typeIdentifier"},{"kind":"text","text":"?.Type, "},{"kind":"typeIdentifier","text":"V2"},{"kind":"text","text":"?.Type, "},{"kind":"typeIdentifier","text":"V3"},{"kind":"text","text":"?.Type, "},{"kind":"typeIdentifier","text":"V4"},{"kind":"text","text":"?.Type, "},{"kind":"typeIdentifier","text":"V5"},{"kind":"text","text":"?.Type) "},{"kind":"keyword","text":"throws"},{"kind":"text","text":"("},{"preciseIdentifier":"s:10OSCKitCore17OSCValueMaskErrorO","text":"OSCValueMaskError","kind":"typeIdentifier"},{"text":") -> (","kind":"text"},{"text":"V0","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"text":"V1","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"kind":"typeIdentifier","text":"V2"},{"text":"?, ","kind":"text"},{"kind":"typeIdentifier","text":"V3"},{"text":"?, ","kind":"text"},{"kind":"typeIdentifier","text":"V4"},{"text":"?, ","kind":"text"},{"kind":"typeIdentifier","text":"V5"},{"text":"?)","kind":"text"}]},"doc://osckit.OSCKit/documentation/OSCKit/OSCValue":{"identifier":"doc:\/\/osckit.OSCKit\/documentation\/OSCKit\/OSCValue","type":"topic","navigatorTitle":[{"text":"OSCValue","kind":"identifier"}],"title":"OSCValue","url":"\/documentation\/osckit\/oscvalue","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"OSCValue","kind":"identifier"}],"kind":"symbol","abstract":[{"type":"text","text":"Protocol to which all compatible OSC value types conform."}],"role":"symbol"},"doc://osckit.OSCKit/documentation/OSCKit/OSCValues":{"type":"topic","identifier":"doc:\/\/osckit.OSCKit\/documentation\/OSCKit\/OSCValues","navigatorTitle":[{"text":"OSCValues","kind":"identifier"}],"url":"\/documentation\/osckit\/oscvalues","title":"OSCValues","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"OSCValues","kind":"identifier"}],"kind":"symbol","abstract":[],"role":"symbol"},"doc://osckit.OSCKit/documentation/OSCKit/Swift/Array":{"type":"topic","identifier":"doc:\/\/osckit.OSCKit\/documentation\/OSCKit\/Swift\/Array","navigatorTitle":[{"text":"Array","kind":"identifier"}],"url":"\/documentation\/osckit\/swift\/array","title":"Array","fragments":[{"text":"extension","kind":"keyword"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:Sa","text":"Array","kind":"identifier"}],"kind":"symbol","abstract":[],"role":"symbol"},"doc://osckit.OSCKit/documentation/OSCKit/OSCInterpolatedValue":{"type":"topic","identifier":"doc:\/\/osckit.OSCKit\/documentation\/OSCKit\/OSCInterpolatedValue","navigatorTitle":[{"text":"OSCInterpolatedValue","kind":"identifier"}],"url":"\/documentation\/osckit\/oscinterpolatedvalue","title":"OSCInterpolatedValue","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"OSCInterpolatedValue","kind":"identifier"}],"kind":"symbol","abstract":[{"text":"Protocol to which all interpolated OSC value types conform.","type":"text"},{"text":" ","type":"text"},{"text":"This includes all convenience types that are not themselves core OSC value types.","type":"text"}],"role":"symbol"},"doc://osckit.OSCKit/documentation/OSCKit/OSCValueMaskError":{"type":"topic","identifier":"doc:\/\/osckit.OSCKit\/documentation\/OSCKit\/OSCValueMaskError","navigatorTitle":[{"text":"OSCValueMaskError","kind":"identifier"}],"url":"\/documentation\/osckit\/oscvaluemaskerror","title":"OSCValueMaskError","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"OSCValueMaskError","kind":"identifier"}],"kind":"symbol","abstract":[{"text":"Error thrown by ","type":"text"},{"identifier":"doc:\/\/osckit.OSCKit\/documentation\/OSCKit\/OSCValues","type":"reference","isActive":true},{"text":" ","type":"text"},{"type":"codeVoice","code":"masked(...)"},{"text":" methods.","type":"text"}],"role":"symbol"},"doc://osckit.OSCKit/documentation/OSCKit/OSCMessage":{"type":"topic","identifier":"doc:\/\/osckit.OSCKit\/documentation\/OSCKit\/OSCMessage","navigatorTitle":[{"text":"OSCMessage","kind":"identifier"}],"url":"\/documentation\/osckit\/oscmessage","title":"OSCMessage","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"OSCMessage","kind":"identifier"}],"kind":"symbol","abstract":[{"text":"OSC Message.","type":"text"}],"role":"symbol"}}}