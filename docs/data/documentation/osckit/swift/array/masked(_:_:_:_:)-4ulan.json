{"sections":[],"identifier":{"url":"doc:\/\/osckit.OSCKit\/documentation\/OSCKit\/Swift\/Array\/masked(_:_:_:_:)-4ulan","interfaceLanguage":"swift"},"variants":[{"paths":["\/documentation\/osckit\/swift\/array\/masked(_:_:_:_:)-4ulan"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/osckit.OSCKit\/documentation\/OSCKit","doc:\/\/osckit.OSCKit\/documentation\/OSCKit\/Swift","doc:\/\/osckit.OSCKit\/documentation\/OSCKit\/Swift\/Array"]]},"abstract":[{"text":"Returns the OSC value sequence as a strongly typed tuple","type":"text"},{"type":"text","text":" "},{"type":"text","text":"if it matches the given mask of concrete value types."},{"text":" ","type":"text"},{"type":"text","text":"If the value types do not match the mask, an error is thrown."}],"metadata":{"roleHeading":"Instance Method","extendedModule":"Swift","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"masked","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"V0"},{"text":", ","kind":"text"},{"text":"V1","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"V2","kind":"genericParameter"},{"text":", ","kind":"text"},{"kind":"genericParameter","text":"V3"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"V0"},{"text":".Type, ","kind":"text"},{"text":"V1","kind":"typeIdentifier"},{"text":"?.Type, ","kind":"text"},{"kind":"typeIdentifier","text":"V2"},{"kind":"text","text":"?.Type, "},{"text":"V3","kind":"typeIdentifier"},{"text":"?.Type) ","kind":"text"},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> ("},{"text":"V0","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"V1","kind":"typeIdentifier"},{"kind":"text","text":"?, "},{"text":"V2","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"text":"V3","kind":"typeIdentifier"},{"text":"?)","kind":"text"}],"conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Element"},{"text":" is ","type":"text"},{"code":"any OSCValue","type":"codeVoice"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"externalID":"s:Sa10OSCKitCoreAA8OSCValue_pRszlE6maskedyqd___qd_0_Sgqd_1_Sgqd_2_Sgtqd__m_ADmAEmAFmtKAA0C8MaskableRd__AaGRd_0_AaGRd_1_AaGRd_2_r2_lF","symbolKind":"method","role":"symbol","title":"masked(_:_:_:_:)","modules":[{"name":"OSCKit","relatedModules":["Swift"]}]},"schemaVersion":{"major":0,"patch":0,"minor":3},"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"masked","kind":"identifier"},{"kind":"text","text":"<"},{"text":"V0","kind":"genericParameter"},{"kind":"text","text":", "},{"text":"V1","kind":"genericParameter"},{"kind":"text","text":", "},{"text":"V2","kind":"genericParameter"},{"text":", ","kind":"text"},{"kind":"genericParameter","text":"V3"},{"kind":"text","text":">("},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"v0"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"V0"},{"text":".Type, ","kind":"text"},{"kind":"externalParam","text":"_"},{"text":" ","kind":"text"},{"text":"v1","kind":"internalParam"},{"kind":"text","text":": "},{"text":"V1","kind":"typeIdentifier"},{"kind":"text","text":"?.Type, "},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"text":"v2","kind":"internalParam"},{"kind":"text","text":": "},{"text":"V2","kind":"typeIdentifier"},{"kind":"text","text":"?.Type, "},{"text":"_","kind":"externalParam"},{"kind":"text","text":" "},{"kind":"internalParam","text":"v3"},{"text":": ","kind":"text"},{"text":"V3","kind":"typeIdentifier"},{"kind":"text","text":"?.Type) "},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> ("},{"text":"V0","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"V1"},{"kind":"text","text":"?, "},{"kind":"typeIdentifier","text":"V2"},{"text":"?, ","kind":"text"},{"kind":"typeIdentifier","text":"V3"},{"text":"?) ","kind":"text"},{"text":"where","kind":"keyword"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"V0"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","identifier":"doc:\/\/osckit.OSCKit\/documentation\/OSCKit\/OSCValueMaskable","text":"OSCValueMaskable","preciseIdentifier":"s:10OSCKitCore16OSCValueMaskableP"},{"text":", ","kind":"text"},{"text":"V1","kind":"typeIdentifier"},{"kind":"text","text":" : "},{"text":"OSCValueMaskable","identifier":"doc:\/\/osckit.OSCKit\/documentation\/OSCKit\/OSCValueMaskable","kind":"typeIdentifier","preciseIdentifier":"s:10OSCKitCore16OSCValueMaskableP"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"V2"},{"text":" : ","kind":"text"},{"text":"OSCValueMaskable","identifier":"doc:\/\/osckit.OSCKit\/documentation\/OSCKit\/OSCValueMaskable","kind":"typeIdentifier","preciseIdentifier":"s:10OSCKitCore16OSCValueMaskableP"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"V3"},{"kind":"text","text":" : "},{"text":"OSCValueMaskable","identifier":"doc:\/\/osckit.OSCKit\/documentation\/OSCKit\/OSCValueMaskable","preciseIdentifier":"s:10OSCKitCore16OSCValueMaskableP","kind":"typeIdentifier"}],"languages":["swift"],"platforms":["macOS"]}],"kind":"declarations"},{"content":[{"level":2,"anchor":"discussion","type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"text":"A mask of up to 10 value types in sequence.","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"Common usage:","type":"text"}]},{"syntax":null,"code":["\/\/ as a tuple","let tuple = try values.masked(String.self, Int.self)","print(tuple.0, tuple.1)","","\/\/ unwrapped into local variables","let (string, int) = try values.masked(String.self, Int.self)","print(string, int)"],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"text":"Basic examples:","type":"text"}]},{"code":["\/\/ present optional value","[\"Test\", 123, Int32(456)].masked(String.self, Int32.self, Int32?.self)","tuple.0 \/\/ \"Test\" as String","tuple.1 \/\/ 123 as Int","tuple.2 \/\/ 456 as Int32?","","\/\/ missing optional value","[\"Test\", 123].masked(String.self, Int32.self, Int32?.self)","tuple.0 \/\/ \"Test\" as String","tuple.1 \/\/ 123 as Int","tuple.2 \/\/ nil as Int32?","","\/\/ mismatching types","[123, 456].masked(String.self, Int32.self)","\/\/ throws OSCValueMaskError.mismatchedTypes","","\/\/ mismatched element count, regardless of types","[123, 456].masked(String.self, Int32.self, Int32.self)","\/\/ throws OSCValueMaskError.invalidCount"],"type":"codeListing","syntax":null},{"inlineContent":[{"code":"Int.self","type":"codeVoice"},{"type":"text","text":" is a special common-use interpolated type for convenience:"}],"type":"paragraph"},{"type":"codeListing","syntax":null,"code":["\/\/ any integer may match against Int.self and is converted to Int","[Int32(123) Int64(456)].masked(Int.self, Int.self)","tuple.0 \/\/ 123 as Int","tuple.1 \/\/ 456 as Int","","\/\/ all other integer types must match themself exactly","[Int32(123) Int64(456)].masked(Int32.self, Int32.self)","\/\/ throws error; mask does not match","","\/\/ same with optionals; specific integer types must match if present","[123, 456, 789].masked(String.self, Int.self, Int32?.self)","\/\/ throws error; mask does not match"]},{"type":"paragraph","inlineContent":[{"text":"In addition to core OSC concrete types, various non-standard OSC types can be used and will","type":"text"},{"text":" ","type":"text"},{"text":"be transparently encoded as their closest related OSC core type when encoding in an","type":"text"},{"text":" ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/osckit.OSCKit\/documentation\/OSCKit\/OSCMessage"},{"type":"text","text":"."}]},{"inlineContent":[{"type":"text","text":"These types conform to the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/osckit.OSCKit\/documentation\/OSCKit\/OSCInterpolatedValue"},{"text":" protocol (which defines their core","type":"text"},{"type":"text","text":" "},{"text":"encoding value type) and may be used any where ","type":"text"},{"isActive":true,"identifier":"doc:\/\/osckit.OSCKit\/documentation\/OSCKit\/OSCValue","type":"reference"},{"text":" is accepted.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"text":"OSCKit provides conformance for a number of such common Swift Standard Library types:","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"Int8"},{"type":"text","text":", "},{"code":"Int16","type":"codeVoice"},{"type":"text","text":", "},{"type":"codeVoice","code":"UInt"},{"text":", ","type":"text"},{"code":"UInt8","type":"codeVoice"},{"type":"text","text":", "},{"code":"UInt16","type":"codeVoice"},{"type":"text","text":", "},{"code":"UInt32","type":"codeVoice"},{"type":"text","text":", "},{"code":"UInt64","type":"codeVoice"},{"text":", ","type":"text"},{"type":"codeVoice","code":"Float16"},{"type":"text","text":", "},{"code":"Float80","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"(Note that "},{"type":"codeVoice","code":"Int32"},{"type":"text","text":", "},{"code":"Int64","type":"codeVoice"},{"type":"text","text":", "},{"type":"codeVoice","code":"Float32"},{"type":"text","text":" are already core "},{"code":"OSCValue","type":"codeVoice"},{"text":" types.)","type":"text"}]},{"code":["let values: OSCValues = [Int8(123), Int16(123)]"],"type":"codeListing","syntax":null},{"type":"paragraph","inlineContent":[{"code":"AnyOSCNumberValue","type":"codeVoice"},{"text":" is a special type to match and box any OSC numeric value.","type":"text"}]},{"code":["[Int8(123)]","    .masked(AnyOSCNumberValue.self)","    \/\/ (AnyOSCNumberValue(Int8(123)))","","[Double(123.45)]","    .masked(AnyOSCNumberValue.self)","    \/\/ (AnyOSCNumberValue(Double(123.45)))","","\/\/ which can be accessed as either typed:","AnyOSCNumberValue(Int8(123)).base \/\/ .int(Int8)","","\/\/ or interpolated:","AnyOSCNumberValue(Int8(123)).intValue \/\/ 123 as Int","AnyOSCNumberValue(Int8(123)).doubleValue \/\/ 123.0 as Double"],"syntax":null,"type":"codeListing"},{"type":"paragraph","inlineContent":[{"type":"text","text":"One or more trailing types can also be expressed as as an "},{"type":"codeVoice","code":"Optional"},{"text":" (ie: ","type":"text"},{"type":"codeVoice","code":"Int32?.self"},{"type":"text","text":")"},{"type":"text","text":" "},{"type":"text","text":"which will match that value type or return "},{"type":"codeVoice","code":"nil"},{"text":" if the value is missing in the base value","type":"text"},{"type":"text","text":" "},{"type":"text","text":"array."}]},{"inlineContent":[{"text":"Core OSC concrete types:","type":"text"}],"type":"paragraph"},{"items":[{"content":[{"inlineContent":[{"code":"Int32.self","type":"codeVoice"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"code":"Float32.self","type":"codeVoice"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"code":"String.self","type":"codeVoice"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"code":"Data.self","type":"codeVoice"},{"text":" (a.k.a. OSC blob)","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"code":"OSCTimeTag.self","type":"codeVoice"}]}]}],"type":"unorderedList"},{"inlineContent":[{"type":"text","text":"Extended (non-standard) OSC concrete types:"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"code":"Bool.self","type":"codeVoice"}]}]},{"content":[{"inlineContent":[{"code":"Character.self","type":"codeVoice"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"codeVoice","code":"Int64.self"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"codeVoice","code":"Double.self"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"code":"OSCArrayValue.self","type":"codeVoice"}]}]},{"content":[{"inlineContent":[{"code":"OSCImpulseValue.self","type":"codeVoice"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"codeVoice","code":"OSCMIDIValue.self"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"OSCNullValue.self"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"OSCStringAltValue.self"}]}]}]},{"inlineContent":[{"text":"Interpolating concrete types for convenience:","type":"text"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"code":"Int.self","type":"codeVoice"},{"type":"text","text":" (converts from any OSC integer types)"}],"type":"paragraph"}]}]},{"inlineContent":[{"text":"Opaque types:","type":"text"}],"type":"paragraph"},{"items":[{"content":[{"inlineContent":[{"code":"AnyOSCNumberValue.self","type":"codeVoice"},{"text":" (boxes any OSC integer or float number)","type":"text"}],"type":"paragraph"}]}],"type":"unorderedList"},{"type":"aside","style":"note","name":"Throws","content":[{"type":"paragraph","inlineContent":[{"text":"","type":"text"},{"type":"reference","identifier":"doc:\/\/osckit.OSCKit\/documentation\/OSCKit\/OSCValueMaskError","isActive":true}]}]}],"kind":"content"}],"references":{"doc://osckit.OSCKit/documentation/OSCKit/Swift/Array":{"identifier":"doc:\/\/osckit.OSCKit\/documentation\/OSCKit\/Swift\/Array","kind":"symbol","url":"\/documentation\/osckit\/swift\/array","title":"Array","navigatorTitle":[{"text":"Array","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"extension"},{"kind":"text","text":" "},{"text":"Array","kind":"identifier","preciseIdentifier":"s:Sa"}],"role":"symbol","abstract":[],"type":"topic"},"doc://osckit.OSCKit/documentation/OSCKit/OSCInterpolatedValue":{"identifier":"doc:\/\/osckit.OSCKit\/documentation\/OSCKit\/OSCInterpolatedValue","kind":"symbol","url":"\/documentation\/osckit\/oscinterpolatedvalue","title":"OSCInterpolatedValue","navigatorTitle":[{"text":"OSCInterpolatedValue","kind":"identifier"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"OSCInterpolatedValue"}],"role":"symbol","abstract":[{"text":"Protocol to which all interpolated OSC value types conform.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"This includes all convenience types that are not themselves core OSC value types."}],"type":"topic"},"doc://osckit.OSCKit/documentation/OSCKit/OSCValueMaskable":{"identifier":"doc:\/\/osckit.OSCKit\/documentation\/OSCKit\/OSCValueMaskable","kind":"symbol","url":"\/documentation\/osckit\/oscvaluemaskable","title":"OSCValueMaskable","navigatorTitle":[{"kind":"identifier","text":"OSCValueMaskable"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"OSCValueMaskable"}],"role":"symbol","abstract":[{"text":"Protocol which all maskable ","type":"text"},{"type":"reference","identifier":"doc:\/\/osckit.OSCKit\/documentation\/OSCKit\/OSCValue","isActive":true},{"text":" types conform.","type":"text"}],"type":"topic"},"doc://osckit.OSCKit/documentation/OSCKit/Swift/Array/masked(_:_:_:_:)-4ulan":{"kind":"symbol","identifier":"doc:\/\/osckit.OSCKit\/documentation\/OSCKit\/Swift\/Array\/masked(_:_:_:_:)-4ulan","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"masked"},{"kind":"text","text":"<"},{"text":"V0","kind":"genericParameter"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"V1"},{"text":", ","kind":"text"},{"text":"V2","kind":"genericParameter"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"V3"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"V0"},{"kind":"text","text":".Type, "},{"text":"V1","kind":"typeIdentifier"},{"kind":"text","text":"?.Type, "},{"text":"V2","kind":"typeIdentifier"},{"kind":"text","text":"?.Type, "},{"text":"V3","kind":"typeIdentifier"},{"kind":"text","text":"?.Type) "},{"kind":"keyword","text":"throws"},{"text":" -> (","kind":"text"},{"kind":"typeIdentifier","text":"V0"},{"text":", ","kind":"text"},{"text":"V1","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"text":"V2","kind":"typeIdentifier"},{"kind":"text","text":"?, "},{"text":"V3","kind":"typeIdentifier"},{"text":"?)","kind":"text"}],"role":"symbol","abstract":[{"text":"Returns the OSC value sequence as a strongly typed tuple","type":"text"},{"type":"text","text":" "},{"type":"text","text":"if it matches the given mask of concrete value types."},{"type":"text","text":" "},{"text":"If the value types do not match the mask, an error is thrown.","type":"text"}],"title":"masked(_:_:_:_:)","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"Element","type":"codeVoice"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"any OSCValue"},{"type":"text","text":"."}]},"url":"\/documentation\/osckit\/swift\/array\/masked(_:_:_:_:)-4ulan"},"doc://osckit.OSCKit/documentation/OSCKit/OSCMessage":{"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"OSCMessage","kind":"identifier"}],"kind":"symbol","title":"OSCMessage","navigatorTitle":[{"kind":"identifier","text":"OSCMessage"}],"type":"topic","identifier":"doc:\/\/osckit.OSCKit\/documentation\/OSCKit\/OSCMessage","url":"\/documentation\/osckit\/oscmessage","abstract":[{"text":"OSC Message.","type":"text"}]},"doc://osckit.OSCKit/documentation/OSCKit/OSCValues":{"identifier":"doc:\/\/osckit.OSCKit\/documentation\/OSCKit\/OSCValues","kind":"symbol","url":"\/documentation\/osckit\/oscvalues","title":"OSCValues","navigatorTitle":[{"text":"OSCValues","kind":"identifier"}],"fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"OSCValues","kind":"identifier"}],"role":"symbol","abstract":[],"type":"topic"},"doc://osckit.OSCKit/documentation/OSCKit":{"role":"collection","url":"\/documentation\/osckit","kind":"symbol","abstract":[{"text":"Open Sound Control (OSC) library for macOS, iOS and tvOS.","type":"text"}],"title":"OSCKit","identifier":"doc:\/\/osckit.OSCKit\/documentation\/OSCKit","type":"topic"},"doc://osckit.OSCKit/documentation/OSCKit/Swift":{"title":"Swift","identifier":"doc:\/\/osckit.OSCKit\/documentation\/OSCKit\/Swift","abstract":[],"role":"collection","url":"\/documentation\/osckit\/swift","type":"topic","kind":"symbol"},"doc://osckit.OSCKit/documentation/OSCKit/OSCValue":{"role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"OSCValue"}],"type":"topic","identifier":"doc:\/\/osckit.OSCKit\/documentation\/OSCKit\/OSCValue","url":"\/documentation\/osckit\/oscvalue","abstract":[{"type":"text","text":"Protocol to which all compatible OSC value types conform."}],"title":"OSCValue","navigatorTitle":[{"kind":"identifier","text":"OSCValue"}],"kind":"symbol"},"doc://osckit.OSCKit/documentation/OSCKit/OSCValueMaskError":{"role":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"OSCValueMaskError"}],"kind":"symbol","title":"OSCValueMaskError","navigatorTitle":[{"text":"OSCValueMaskError","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/osckit.OSCKit\/documentation\/OSCKit\/OSCValueMaskError","url":"\/documentation\/osckit\/oscvaluemaskerror","abstract":[{"text":"Error thrown by ","type":"text"},{"type":"reference","identifier":"doc:\/\/osckit.OSCKit\/documentation\/OSCKit\/OSCValues","isActive":true},{"text":" ","type":"text"},{"type":"codeVoice","code":"masked(...)"},{"text":" methods.","type":"text"}]}}}