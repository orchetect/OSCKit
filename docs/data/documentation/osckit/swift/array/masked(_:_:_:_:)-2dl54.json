{"identifier":{"url":"doc:\/\/osckit.OSCKit\/documentation\/OSCKit\/Swift\/Array\/masked(_:_:_:_:)-2dl54","interfaceLanguage":"swift"},"abstract":[{"text":"Returns the OSC value sequence as a strongly typed tuple","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"if it matches the given mask of concrete value types."},{"type":"text","text":" "},{"type":"text","text":"If the value types do not match the mask, an error is thrown."}],"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"masked","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"V0"},{"kind":"text","text":", "},{"text":"V1","kind":"genericParameter"},{"text":", ","kind":"text"},{"kind":"genericParameter","text":"V2"},{"text":", ","kind":"text"},{"text":"V3","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"v0"},{"kind":"text","text":": "},{"text":"V0","kind":"typeIdentifier"},{"text":".Type, ","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"v1"},{"kind":"text","text":": "},{"text":"V1","kind":"typeIdentifier"},{"text":".Type, ","kind":"text"},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"text":"v2","kind":"internalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"V2"},{"kind":"text","text":".Type, "},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"v3"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"V3"},{"kind":"text","text":"?.Type) "},{"kind":"keyword","text":"throws"},{"text":" -> (","kind":"text"},{"text":"V0","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"V1"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"V2"},{"text":", ","kind":"text"},{"text":"V3","kind":"typeIdentifier"},{"text":"?) ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"V0"},{"text":" : ","kind":"text"},{"text":"OSCValueMaskable","identifier":"doc:\/\/osckit.OSCKit\/documentation\/OSCKit\/OSCValueMaskable","preciseIdentifier":"s:10OSCKitCore16OSCValueMaskableP","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"V1"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","identifier":"doc:\/\/osckit.OSCKit\/documentation\/OSCKit\/OSCValueMaskable","text":"OSCValueMaskable","preciseIdentifier":"s:10OSCKitCore16OSCValueMaskableP"},{"text":", ","kind":"text"},{"text":"V2","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"OSCValueMaskable","preciseIdentifier":"s:10OSCKitCore16OSCValueMaskableP","kind":"typeIdentifier","identifier":"doc:\/\/osckit.OSCKit\/documentation\/OSCKit\/OSCValueMaskable"},{"text":", ","kind":"text"},{"text":"V3","kind":"typeIdentifier"},{"kind":"text","text":" : "},{"text":"OSCValueMaskable","kind":"typeIdentifier","identifier":"doc:\/\/osckit.OSCKit\/documentation\/OSCKit\/OSCValueMaskable","preciseIdentifier":"s:10OSCKitCore16OSCValueMaskableP"}]}],"kind":"declarations"},{"kind":"content","content":[{"text":"Discussion","type":"heading","anchor":"discussion","level":2},{"inlineContent":[{"text":"A mask of up to 10 value types in sequence.","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Common usage:"}]},{"syntax":null,"type":"codeListing","code":["\/\/ as a tuple","let tuple = try values.masked(String.self, Int.self)","print(tuple.0, tuple.1)","","\/\/ unwrapped into local variables","let (string, int) = try values.masked(String.self, Int.self)","print(string, int)"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Basic examples:"}]},{"code":["\/\/ present optional value","[\"Test\", 123, Int32(456)].masked(String.self, Int32.self, Int32?.self)","tuple.0 \/\/ \"Test\" as String","tuple.1 \/\/ 123 as Int","tuple.2 \/\/ 456 as Int32?","","\/\/ missing optional value","[\"Test\", 123].masked(String.self, Int32.self, Int32?.self)","tuple.0 \/\/ \"Test\" as String","tuple.1 \/\/ 123 as Int","tuple.2 \/\/ nil as Int32?","","\/\/ mismatching types","[123, 456].masked(String.self, Int32.self)","\/\/ throws OSCValueMaskError.mismatchedTypes","","\/\/ mismatched element count, regardless of types","[123, 456].masked(String.self, Int32.self, Int32.self)","\/\/ throws OSCValueMaskError.invalidCount"],"syntax":null,"type":"codeListing"},{"type":"paragraph","inlineContent":[{"code":"Int.self","type":"codeVoice"},{"type":"text","text":" is a special common-use interpolated type for convenience:"}]},{"type":"codeListing","syntax":null,"code":["\/\/ any integer may match against Int.self and is converted to Int","[Int32(123) Int64(456)].masked(Int.self, Int.self)","tuple.0 \/\/ 123 as Int","tuple.1 \/\/ 456 as Int","","\/\/ all other integer types must match themself exactly","[Int32(123) Int64(456)].masked(Int32.self, Int32.self)","\/\/ throws error; mask does not match","","\/\/ same with optionals; specific integer types must match if present","[123, 456, 789].masked(String.self, Int.self, Int32?.self)","\/\/ throws error; mask does not match"]},{"type":"paragraph","inlineContent":[{"text":"In addition to core OSC concrete types, various non-standard OSC types can be used and will","type":"text"},{"type":"text","text":" "},{"text":"be transparently encoded as their closest related OSC core type when encoding in an","type":"text"},{"type":"text","text":" "},{"type":"reference","identifier":"doc:\/\/osckit.OSCKit\/documentation\/OSCKit\/OSCMessage","isActive":true},{"type":"text","text":"."}]},{"inlineContent":[{"type":"text","text":"These types conform to the "},{"identifier":"doc:\/\/osckit.OSCKit\/documentation\/OSCKit\/OSCInterpolatedValue","isActive":true,"type":"reference"},{"text":" protocol (which defines their core","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"encoding value type) and may be used any where "},{"isActive":true,"type":"reference","identifier":"doc:\/\/osckit.OSCKit\/documentation\/OSCKit\/OSCValue"},{"text":" is accepted.","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"OSCKit provides conformance for a number of such common Swift Standard Library types:","type":"text"},{"type":"text","text":" "},{"code":"Int8","type":"codeVoice"},{"text":", ","type":"text"},{"type":"codeVoice","code":"Int16"},{"type":"text","text":", "},{"code":"UInt","type":"codeVoice"},{"text":", ","type":"text"},{"code":"UInt8","type":"codeVoice"},{"text":", ","type":"text"},{"code":"UInt16","type":"codeVoice"},{"type":"text","text":", "},{"code":"UInt32","type":"codeVoice"},{"text":", ","type":"text"},{"type":"codeVoice","code":"UInt64"},{"text":", ","type":"text"},{"type":"codeVoice","code":"Float16"},{"text":", ","type":"text"},{"type":"codeVoice","code":"Float80"},{"text":".","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"(Note that ","type":"text"},{"type":"codeVoice","code":"Int32"},{"type":"text","text":", "},{"type":"codeVoice","code":"Int64"},{"type":"text","text":", "},{"code":"Float32","type":"codeVoice"},{"text":" are already core ","type":"text"},{"type":"codeVoice","code":"OSCValue"},{"type":"text","text":" types.)"}]},{"syntax":null,"code":["let values: OSCValues = [Int8(123), Int16(123)]"],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"AnyOSCNumberValue"},{"text":" is a special type to match and box any OSC numeric value.","type":"text"}]},{"type":"codeListing","code":["[Int8(123)]","    .masked(AnyOSCNumberValue.self)","    \/\/ (AnyOSCNumberValue(Int8(123)))","","[Double(123.45)]","    .masked(AnyOSCNumberValue.self)","    \/\/ (AnyOSCNumberValue(Double(123.45)))","","\/\/ which can be accessed as either typed:","AnyOSCNumberValue(Int8(123)).base \/\/ .int(Int8)","","\/\/ or interpolated:","AnyOSCNumberValue(Int8(123)).intValue \/\/ 123 as Int","AnyOSCNumberValue(Int8(123)).doubleValue \/\/ 123.0 as Double"],"syntax":null},{"type":"paragraph","inlineContent":[{"type":"text","text":"One or more trailing types can also be expressed as as an "},{"type":"codeVoice","code":"Optional"},{"text":" (ie: ","type":"text"},{"type":"codeVoice","code":"Int32?.self"},{"type":"text","text":")"},{"text":" ","type":"text"},{"type":"text","text":"which will match that value type or return "},{"code":"nil","type":"codeVoice"},{"type":"text","text":" if the value is missing in the base value"},{"type":"text","text":" "},{"type":"text","text":"array."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Core OSC concrete types:"}]},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"Int32.self"}]}]},{"content":[{"inlineContent":[{"code":"Float32.self","type":"codeVoice"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"code":"String.self","type":"codeVoice"}]}]},{"content":[{"inlineContent":[{"type":"codeVoice","code":"Data.self"},{"type":"text","text":" (a.k.a. OSC blob)"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"code":"OSCTimeTag.self","type":"codeVoice"}]}]}],"type":"unorderedList"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Extended (non-standard) OSC concrete types:"}]},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"code":"Bool.self","type":"codeVoice"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"Character.self"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"Int64.self"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"Double.self"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"OSCArrayValue.self"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"OSCImpulseValue.self"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"OSCMIDIValue.self"}]}]},{"content":[{"inlineContent":[{"type":"codeVoice","code":"OSCNullValue.self"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"OSCStringAltValue.self"}]}]}],"type":"unorderedList"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Interpolating concrete types for convenience:"}]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"code":"Int.self","type":"codeVoice"},{"text":" (converts from any OSC integer types)","type":"text"}],"type":"paragraph"}]}]},{"inlineContent":[{"type":"text","text":"Opaque types:"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"codeVoice","code":"AnyOSCNumberValue.self"},{"type":"text","text":" (boxes any OSC integer or float number)"}],"type":"paragraph"}]}]},{"name":"Throws","type":"aside","style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":""},{"identifier":"doc:\/\/osckit.OSCKit\/documentation\/OSCKit\/OSCValueMaskError","type":"reference","isActive":true}]}]}]}],"variants":[{"paths":["\/documentation\/osckit\/swift\/array\/masked(_:_:_:_:)-2dl54"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"extendedModule":"Swift","roleHeading":"Instance Method","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"masked"},{"kind":"text","text":"<"},{"text":"V0","kind":"genericParameter"},{"text":", ","kind":"text"},{"kind":"genericParameter","text":"V1"},{"text":", ","kind":"text"},{"text":"V2","kind":"genericParameter"},{"text":", ","kind":"text"},{"kind":"genericParameter","text":"V3"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"V0"},{"kind":"text","text":".Type, "},{"text":"V1","kind":"typeIdentifier"},{"kind":"text","text":".Type, "},{"kind":"typeIdentifier","text":"V2"},{"text":".Type, ","kind":"text"},{"text":"V3","kind":"typeIdentifier"},{"text":"?.Type) ","kind":"text"},{"kind":"keyword","text":"throws"},{"text":" -> (","kind":"text"},{"kind":"typeIdentifier","text":"V0"},{"kind":"text","text":", "},{"text":"V1","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"V2"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"V3"},{"text":"?)","kind":"text"}],"role":"symbol","modules":[{"name":"OSCKit","relatedModules":["Swift"]}],"title":"masked(_:_:_:_:)","conformance":{"constraints":[{"code":"Element","type":"codeVoice"},{"type":"text","text":" is "},{"type":"codeVoice","code":"any OSCValue"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"symbolKind":"method","externalID":"s:Sa10OSCKitCoreAA8OSCValue_pRszlE6maskedyqd___qd_0_qd_1_qd_2_Sgtqd__m_qd_0_mqd_1_mADmtKAA0C8MaskableRd__AaERd_0_AaERd_1_AaERd_2_r2_lF"},"kind":"symbol","sections":[],"schemaVersion":{"major":0,"minor":3,"patch":0},"hierarchy":{"paths":[["doc:\/\/osckit.OSCKit\/documentation\/OSCKit","doc:\/\/osckit.OSCKit\/documentation\/OSCKit\/Swift","doc:\/\/osckit.OSCKit\/documentation\/OSCKit\/Swift\/Array"]]},"references":{"doc://osckit.OSCKit/documentation/OSCKit/OSCValueMaskable":{"kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"OSCValueMaskable","kind":"identifier"}],"title":"OSCValueMaskable","type":"topic","url":"\/documentation\/osckit\/oscvaluemaskable","navigatorTitle":[{"kind":"identifier","text":"OSCValueMaskable"}],"identifier":"doc:\/\/osckit.OSCKit\/documentation\/OSCKit\/OSCValueMaskable","role":"symbol","abstract":[{"text":"Protocol which all maskable ","type":"text"},{"identifier":"doc:\/\/osckit.OSCKit\/documentation\/OSCKit\/OSCValue","isActive":true,"type":"reference"},{"text":" types conform.","type":"text"}]},"doc://osckit.OSCKit/documentation/OSCKit/Swift":{"identifier":"doc:\/\/osckit.OSCKit\/documentation\/OSCKit\/Swift","abstract":[],"url":"\/documentation\/osckit\/swift","role":"collection","type":"topic","kind":"symbol","title":"Swift"},"doc://osckit.OSCKit/documentation/OSCKit/OSCValueMaskError":{"kind":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"OSCValueMaskError"}],"title":"OSCValueMaskError","type":"topic","url":"\/documentation\/osckit\/oscvaluemaskerror","navigatorTitle":[{"text":"OSCValueMaskError","kind":"identifier"}],"identifier":"doc:\/\/osckit.OSCKit\/documentation\/OSCKit\/OSCValueMaskError","role":"symbol","abstract":[{"text":"Error thrown by ","type":"text"},{"isActive":true,"identifier":"doc:\/\/osckit.OSCKit\/documentation\/OSCKit\/OSCValues","type":"reference"},{"text":" ","type":"text"},{"type":"codeVoice","code":"masked(...)"},{"text":" methods.","type":"text"}]},"doc://osckit.OSCKit/documentation/OSCKit/OSCValue":{"title":"OSCValue","url":"\/documentation\/osckit\/oscvalue","kind":"symbol","abstract":[{"text":"Protocol to which all compatible OSC value types conform.","type":"text"}],"identifier":"doc:\/\/osckit.OSCKit\/documentation\/OSCKit\/OSCValue","role":"symbol","type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"OSCValue"}],"navigatorTitle":[{"text":"OSCValue","kind":"identifier"}]},"doc://osckit.OSCKit/documentation/OSCKit/Swift/Array":{"kind":"symbol","type":"topic","title":"Array","url":"\/documentation\/osckit\/swift\/array","navigatorTitle":[{"text":"Array","kind":"identifier"}],"identifier":"doc:\/\/osckit.OSCKit\/documentation\/OSCKit\/Swift\/Array","abstract":[],"fragments":[{"text":"extension","kind":"keyword"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:Sa","kind":"identifier","text":"Array"}],"role":"symbol"},"doc://osckit.OSCKit/documentation/OSCKit/Swift/Array/masked(_:_:_:_:)-2dl54":{"identifier":"doc:\/\/osckit.OSCKit\/documentation\/OSCKit\/Swift\/Array\/masked(_:_:_:_:)-2dl54","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"masked","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"V0"},{"text":", ","kind":"text"},{"text":"V1","kind":"genericParameter"},{"kind":"text","text":", "},{"text":"V2","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"V3","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"V0","kind":"typeIdentifier"},{"kind":"text","text":".Type, "},{"text":"V1","kind":"typeIdentifier"},{"text":".Type, ","kind":"text"},{"kind":"typeIdentifier","text":"V2"},{"text":".Type, ","kind":"text"},{"text":"V3","kind":"typeIdentifier"},{"text":"?.Type) ","kind":"text"},{"kind":"keyword","text":"throws"},{"text":" -> (","kind":"text"},{"text":"V0","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"V1"},{"text":", ","kind":"text"},{"text":"V2","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"V3","kind":"typeIdentifier"},{"kind":"text","text":"?)"}],"type":"topic","title":"masked(_:_:_:_:)","role":"symbol","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Element"},{"type":"text","text":" is "},{"code":"any OSCValue","type":"codeVoice"},{"type":"text","text":"."}]},"abstract":[{"type":"text","text":"Returns the OSC value sequence as a strongly typed tuple"},{"type":"text","text":" "},{"type":"text","text":"if it matches the given mask of concrete value types."},{"text":" ","type":"text"},{"type":"text","text":"If the value types do not match the mask, an error is thrown."}],"kind":"symbol","url":"\/documentation\/osckit\/swift\/array\/masked(_:_:_:_:)-2dl54"},"doc://osckit.OSCKit/documentation/OSCKit/OSCMessage":{"identifier":"doc:\/\/osckit.OSCKit\/documentation\/OSCKit\/OSCMessage","abstract":[{"type":"text","text":"OSC Message."}],"url":"\/documentation\/osckit\/oscmessage","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"OSCMessage","kind":"identifier"}],"type":"topic","kind":"symbol","title":"OSCMessage","navigatorTitle":[{"text":"OSCMessage","kind":"identifier"}]},"doc://osckit.OSCKit/documentation/OSCKit/OSCInterpolatedValue":{"kind":"symbol","type":"topic","title":"OSCInterpolatedValue","url":"\/documentation\/osckit\/oscinterpolatedvalue","navigatorTitle":[{"text":"OSCInterpolatedValue","kind":"identifier"}],"identifier":"doc:\/\/osckit.OSCKit\/documentation\/OSCKit\/OSCInterpolatedValue","abstract":[{"text":"Protocol to which all interpolated OSC value types conform.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"This includes all convenience types that are not themselves core OSC value types."}],"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"OSCInterpolatedValue","kind":"identifier"}],"role":"symbol"},"doc://osckit.OSCKit/documentation/OSCKit":{"role":"collection","abstract":[{"text":"Open Sound Control (OSC) library for macOS, iOS and tvOS.","type":"text"}],"kind":"symbol","url":"\/documentation\/osckit","title":"OSCKit","type":"topic","identifier":"doc:\/\/osckit.OSCKit\/documentation\/OSCKit"},"doc://osckit.OSCKit/documentation/OSCKit/OSCValues":{"kind":"symbol","type":"topic","title":"OSCValues","url":"\/documentation\/osckit\/oscvalues","navigatorTitle":[{"kind":"identifier","text":"OSCValues"}],"identifier":"doc:\/\/osckit.OSCKit\/documentation\/OSCKit\/OSCValues","abstract":[],"fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"OSCValues"}],"role":"symbol"}}}