{"hierarchy":{"paths":[["doc:\/\/osckit.OSCKit\/documentation\/OSCKit","doc:\/\/osckit.OSCKit\/documentation\/OSCKit\/Swift","doc:\/\/osckit.OSCKit\/documentation\/OSCKit\/Swift\/Array"]]},"abstract":[{"type":"text","text":"Returns the OSC value sequence as a strongly typed tuple"},{"type":"text","text":" "},{"type":"text","text":"if it matches the given mask of concrete value types."},{"type":"text","text":" "},{"text":"If the value types do not match the mask, an error is thrown.","type":"text"}],"schemaVersion":{"major":0,"minor":3,"patch":0},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/osckit.OSCKit\/documentation\/OSCKit\/Swift\/Array\/masked(_:_:_:_:)-1bcq5"},"metadata":{"role":"symbol","externalID":"s:Sa10OSCKitCoreAA8OSCValue_pRszlE6maskedyqd___qd_0_qd_1_qd_2_tqd__m_qd_0_mqd_1_mqd_2_mtKAA0C8MaskableRd__AaDRd_0_AaDRd_1_AaDRd_2_r2_lF","roleHeading":"Instance Method","title":"masked(_:_:_:_:)","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Element"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"any OSCValue"},{"type":"text","text":"."}]},"symbolKind":"method","modules":[{"name":"OSCKit","relatedModules":["Swift"]}],"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"masked","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"V0"},{"kind":"text","text":", "},{"text":"V1","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"V2","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"V3","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"V0"},{"kind":"text","text":".Type, "},{"kind":"typeIdentifier","text":"V1"},{"text":".Type, ","kind":"text"},{"kind":"typeIdentifier","text":"V2"},{"kind":"text","text":".Type, "},{"kind":"typeIdentifier","text":"V3"},{"text":".Type) ","kind":"text"},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> ("},{"kind":"typeIdentifier","text":"V0"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"V1"},{"text":", ","kind":"text"},{"text":"V2","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"V3"},{"text":")","kind":"text"}],"extendedModule":"Swift"},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"masked","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"V0"},{"text":", ","kind":"text"},{"text":"V1","kind":"genericParameter"},{"kind":"text","text":", "},{"text":"V2","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"V3","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"_"},{"text":" ","kind":"text"},{"text":"v0","kind":"internalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"V0"},{"kind":"text","text":".Type, "},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"v1"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"V1"},{"text":".Type, ","kind":"text"},{"kind":"externalParam","text":"_"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"v2"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"V2"},{"kind":"text","text":".Type, "},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"text":"v3","kind":"internalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"V3"},{"text":".Type) ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> (","kind":"text"},{"kind":"typeIdentifier","text":"V0"},{"kind":"text","text":", "},{"text":"V1","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"V2"},{"text":", ","kind":"text"},{"text":"V3","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"where","kind":"keyword"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"V0"},{"text":" : ","kind":"text"},{"text":"OSCValueMaskable","preciseIdentifier":"s:10OSCKitCore16OSCValueMaskableP","identifier":"doc:\/\/osckit.OSCKit\/documentation\/OSCKit\/OSCValueMaskable","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"V1","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"OSCValueMaskable","identifier":"doc:\/\/osckit.OSCKit\/documentation\/OSCKit\/OSCValueMaskable","preciseIdentifier":"s:10OSCKitCore16OSCValueMaskableP","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"V2","kind":"typeIdentifier"},{"kind":"text","text":" : "},{"identifier":"doc:\/\/osckit.OSCKit\/documentation\/OSCKit\/OSCValueMaskable","text":"OSCValueMaskable","preciseIdentifier":"s:10OSCKitCore16OSCValueMaskableP","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"V3","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"kind":"typeIdentifier","text":"OSCValueMaskable","preciseIdentifier":"s:10OSCKitCore16OSCValueMaskableP","identifier":"doc:\/\/osckit.OSCKit\/documentation\/OSCKit\/OSCValueMaskable"}],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"discussion","text":"Discussion","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"text":"A mask of up to 10 value types in sequence.","type":"text"}]},{"inlineContent":[{"type":"text","text":"Common usage:"}],"type":"paragraph"},{"type":"codeListing","syntax":null,"code":["\/\/ as a tuple","let tuple = try values.masked(String.self, Int.self)","print(tuple.0, tuple.1)","","\/\/ unwrapped into local variables","let (string, int) = try values.masked(String.self, Int.self)","print(string, int)"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Basic examples:"}]},{"syntax":null,"type":"codeListing","code":["\/\/ present optional value","[\"Test\", 123, Int32(456)].masked(String.self, Int32.self, Int32?.self)","tuple.0 \/\/ \"Test\" as String","tuple.1 \/\/ 123 as Int","tuple.2 \/\/ 456 as Int32?","","\/\/ missing optional value","[\"Test\", 123].masked(String.self, Int32.self, Int32?.self)","tuple.0 \/\/ \"Test\" as String","tuple.1 \/\/ 123 as Int","tuple.2 \/\/ nil as Int32?","","\/\/ mismatching types","[123, 456].masked(String.self, Int32.self)","\/\/ throws OSCValueMaskError.mismatchedTypes","","\/\/ mismatched element count, regardless of types","[123, 456].masked(String.self, Int32.self, Int32.self)","\/\/ throws OSCValueMaskError.invalidCount"]},{"inlineContent":[{"code":"Int.self","type":"codeVoice"},{"type":"text","text":" is a special common-use interpolated type for convenience:"}],"type":"paragraph"},{"type":"codeListing","syntax":null,"code":["\/\/ any integer may match against Int.self and is converted to Int","[Int32(123) Int64(456)].masked(Int.self, Int.self)","tuple.0 \/\/ 123 as Int","tuple.1 \/\/ 456 as Int","","\/\/ all other integer types must match themself exactly","[Int32(123) Int64(456)].masked(Int32.self, Int32.self)","\/\/ throws error; mask does not match","","\/\/ same with optionals; specific integer types must match if present","[123, 456, 789].masked(String.self, Int.self, Int32?.self)","\/\/ throws error; mask does not match"]},{"inlineContent":[{"text":"In addition to core OSC concrete types, various non-standard OSC types can be used and will","type":"text"},{"type":"text","text":" "},{"text":"be transparently encoded as their closest related OSC core type when encoding in an","type":"text"},{"text":" ","type":"text"},{"isActive":true,"identifier":"doc:\/\/osckit.OSCKit\/documentation\/OSCKit\/OSCMessage","type":"reference"},{"text":".","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"These types conform to the ","type":"text"},{"identifier":"doc:\/\/osckit.OSCKit\/documentation\/OSCKit\/OSCInterpolatedValue","isActive":true,"type":"reference"},{"type":"text","text":" protocol (which defines their core"},{"type":"text","text":" "},{"text":"encoding value type) and may be used any where ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/osckit.OSCKit\/documentation\/OSCKit\/OSCValue"},{"text":" is accepted.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"OSCKit provides conformance for a number of such common Swift Standard Library types:"},{"type":"text","text":" "},{"type":"codeVoice","code":"Int8"},{"type":"text","text":", "},{"code":"Int16","type":"codeVoice"},{"text":", ","type":"text"},{"code":"UInt","type":"codeVoice"},{"text":", ","type":"text"},{"code":"UInt8","type":"codeVoice"},{"type":"text","text":", "},{"code":"UInt16","type":"codeVoice"},{"text":", ","type":"text"},{"type":"codeVoice","code":"UInt32"},{"type":"text","text":", "},{"code":"UInt64","type":"codeVoice"},{"text":", ","type":"text"},{"code":"Float16","type":"codeVoice"},{"text":", ","type":"text"},{"code":"Float80","type":"codeVoice"},{"text":".","type":"text"}]},{"inlineContent":[{"text":"(Note that ","type":"text"},{"type":"codeVoice","code":"Int32"},{"text":", ","type":"text"},{"type":"codeVoice","code":"Int64"},{"type":"text","text":", "},{"type":"codeVoice","code":"Float32"},{"text":" are already core ","type":"text"},{"code":"OSCValue","type":"codeVoice"},{"text":" types.)","type":"text"}],"type":"paragraph"},{"syntax":null,"code":["let values: OSCValues = [Int8(123), Int16(123)]"],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"AnyOSCNumberValue"},{"type":"text","text":" is a special type to match and box any OSC numeric value."}]},{"type":"codeListing","syntax":null,"code":["[Int8(123)]","    .masked(AnyOSCNumberValue.self)","    \/\/ (AnyOSCNumberValue(Int8(123)))","","[Double(123.45)]","    .masked(AnyOSCNumberValue.self)","    \/\/ (AnyOSCNumberValue(Double(123.45)))","","\/\/ which can be accessed as either typed:","AnyOSCNumberValue(Int8(123)).base \/\/ .int(Int8)","","\/\/ or interpolated:","AnyOSCNumberValue(Int8(123)).intValue \/\/ 123 as Int","AnyOSCNumberValue(Int8(123)).doubleValue \/\/ 123.0 as Double"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"One or more trailing types can also be expressed as as an "},{"type":"codeVoice","code":"Optional"},{"type":"text","text":" (ie: "},{"type":"codeVoice","code":"Int32?.self"},{"type":"text","text":")"},{"text":" ","type":"text"},{"type":"text","text":"which will match that value type or return "},{"type":"codeVoice","code":"nil"},{"text":" if the value is missing in the base value","type":"text"},{"text":" ","type":"text"},{"text":"array.","type":"text"}]},{"inlineContent":[{"type":"text","text":"Core OSC concrete types:"}],"type":"paragraph"},{"items":[{"content":[{"inlineContent":[{"type":"codeVoice","code":"Int32.self"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"code":"Float32.self","type":"codeVoice"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"code":"String.self","type":"codeVoice"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"code":"Data.self","type":"codeVoice"},{"text":" (a.k.a. OSC blob)","type":"text"}]}]},{"content":[{"inlineContent":[{"code":"OSCTimeTag.self","type":"codeVoice"}],"type":"paragraph"}]}],"type":"unorderedList"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Extended (non-standard) OSC concrete types:"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"code":"Bool.self","type":"codeVoice"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"Character.self"}]}]},{"content":[{"inlineContent":[{"code":"Int64.self","type":"codeVoice"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"Double.self"}]}]},{"content":[{"inlineContent":[{"code":"OSCArrayValue.self","type":"codeVoice"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"code":"OSCImpulseValue.self","type":"codeVoice"}]}]},{"content":[{"inlineContent":[{"code":"OSCMIDIValue.self","type":"codeVoice"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"OSCNullValue.self"}]}]},{"content":[{"inlineContent":[{"type":"codeVoice","code":"OSCStringAltValue.self"}],"type":"paragraph"}]}]},{"inlineContent":[{"type":"text","text":"Interpolating concrete types for convenience:"}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"Int.self"},{"text":" (converts from any OSC integer types)","type":"text"}]}]}],"type":"unorderedList"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Opaque types:"}]},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"code":"AnyOSCNumberValue.self","type":"codeVoice"},{"text":" (boxes any OSC integer or float number)","type":"text"}]}]}],"type":"unorderedList"},{"name":"Throws","style":"note","type":"aside","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":""},{"identifier":"doc:\/\/osckit.OSCKit\/documentation\/OSCKit\/OSCValueMaskError","type":"reference","isActive":true}]}]}]}],"kind":"symbol","sections":[],"variants":[{"paths":["\/documentation\/osckit\/swift\/array\/masked(_:_:_:_:)-1bcq5"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://osckit.OSCKit/documentation/OSCKit/OSCValues":{"title":"OSCValues","kind":"symbol","navigatorTitle":[{"text":"OSCValues","kind":"identifier"}],"role":"symbol","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"text":"OSCValues","kind":"identifier"}],"url":"\/documentation\/osckit\/oscvalues","abstract":[],"type":"topic","identifier":"doc:\/\/osckit.OSCKit\/documentation\/OSCKit\/OSCValues"},"doc://osckit.OSCKit/documentation/OSCKit/Swift":{"url":"\/documentation\/osckit\/swift","identifier":"doc:\/\/osckit.OSCKit\/documentation\/OSCKit\/Swift","type":"topic","title":"Swift","role":"collection","abstract":[],"kind":"symbol"},"doc://osckit.OSCKit/documentation/OSCKit/Swift/Array":{"navigatorTitle":[{"text":"Array","kind":"identifier"}],"type":"topic","title":"Array","identifier":"doc:\/\/osckit.OSCKit\/documentation\/OSCKit\/Swift\/Array","role":"symbol","fragments":[{"text":"extension","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","preciseIdentifier":"s:Sa","text":"Array"}],"kind":"symbol","url":"\/documentation\/osckit\/swift\/array","abstract":[]},"doc://osckit.OSCKit/documentation/OSCKit/OSCMessage":{"abstract":[{"type":"text","text":"OSC Message."}],"navigatorTitle":[{"kind":"identifier","text":"OSCMessage"}],"title":"OSCMessage","identifier":"doc:\/\/osckit.OSCKit\/documentation\/OSCKit\/OSCMessage","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"OSCMessage"}],"role":"symbol","url":"\/documentation\/osckit\/oscmessage","kind":"symbol","type":"topic"},"doc://osckit.OSCKit/documentation/OSCKit/OSCInterpolatedValue":{"navigatorTitle":[{"text":"OSCInterpolatedValue","kind":"identifier"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"OSCInterpolatedValue"}],"url":"\/documentation\/osckit\/oscinterpolatedvalue","identifier":"doc:\/\/osckit.OSCKit\/documentation\/OSCKit\/OSCInterpolatedValue","type":"topic","title":"OSCInterpolatedValue","role":"symbol","abstract":[{"type":"text","text":"Protocol to which all interpolated OSC value types conform."},{"type":"text","text":" "},{"type":"text","text":"This includes all convenience types that are not themselves core OSC value types."}],"kind":"symbol"},"doc://osckit.OSCKit/documentation/OSCKit/OSCValueMaskError":{"navigatorTitle":[{"kind":"identifier","text":"OSCValueMaskError"}],"type":"topic","title":"OSCValueMaskError","identifier":"doc:\/\/osckit.OSCKit\/documentation\/OSCKit\/OSCValueMaskError","role":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"OSCValueMaskError","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/osckit\/oscvaluemaskerror","abstract":[{"type":"text","text":"Error thrown by "},{"type":"reference","identifier":"doc:\/\/osckit.OSCKit\/documentation\/OSCKit\/OSCValues","isActive":true},{"type":"text","text":" "},{"code":"masked(...)","type":"codeVoice"},{"text":" methods.","type":"text"}]},"doc://osckit.OSCKit/documentation/OSCKit":{"identifier":"doc:\/\/osckit.OSCKit\/documentation\/OSCKit","type":"topic","abstract":[{"type":"text","text":"Open Sound Control (OSC) library for macOS, iOS and tvOS."}],"url":"\/documentation\/osckit","kind":"symbol","title":"OSCKit","role":"collection"},"doc://osckit.OSCKit/documentation/OSCKit/OSCValue":{"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"OSCValue","kind":"identifier"}],"identifier":"doc:\/\/osckit.OSCKit\/documentation\/OSCKit\/OSCValue","type":"topic","navigatorTitle":[{"text":"OSCValue","kind":"identifier"}],"abstract":[{"type":"text","text":"Protocol to which all compatible OSC value types conform."}],"url":"\/documentation\/osckit\/oscvalue","kind":"symbol","title":"OSCValue","role":"symbol"},"doc://osckit.OSCKit/documentation/OSCKit/OSCValueMaskable":{"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"OSCValueMaskable","kind":"identifier"}],"title":"OSCValueMaskable","url":"\/documentation\/osckit\/oscvaluemaskable","identifier":"doc:\/\/osckit.OSCKit\/documentation\/OSCKit\/OSCValueMaskable","navigatorTitle":[{"text":"OSCValueMaskable","kind":"identifier"}],"type":"topic","role":"symbol","kind":"symbol","abstract":[{"type":"text","text":"Protocol which all maskable "},{"type":"reference","identifier":"doc:\/\/osckit.OSCKit\/documentation\/OSCKit\/OSCValue","isActive":true},{"text":" types conform.","type":"text"}]},"doc://osckit.OSCKit/documentation/OSCKit/Swift/Array/masked(_:_:_:_:)-1bcq5":{"identifier":"doc:\/\/osckit.OSCKit\/documentation\/OSCKit\/Swift\/Array\/masked(_:_:_:_:)-1bcq5","kind":"symbol","url":"\/documentation\/osckit\/swift\/array\/masked(_:_:_:_:)-1bcq5","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"masked","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"V0"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"V1"},{"text":", ","kind":"text"},{"text":"V2","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"V3","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"V0","kind":"typeIdentifier"},{"text":".Type, ","kind":"text"},{"kind":"typeIdentifier","text":"V1"},{"text":".Type, ","kind":"text"},{"kind":"typeIdentifier","text":"V2"},{"kind":"text","text":".Type, "},{"text":"V3","kind":"typeIdentifier"},{"kind":"text","text":".Type) "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> ("},{"text":"V0","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"V1","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"V2","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"V3","kind":"typeIdentifier"},{"text":")","kind":"text"}],"type":"topic","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Element","type":"codeVoice"},{"type":"text","text":" is "},{"code":"any OSCValue","type":"codeVoice"},{"text":".","type":"text"}]},"abstract":[{"type":"text","text":"Returns the OSC value sequence as a strongly typed tuple"},{"text":" ","type":"text"},{"text":"if it matches the given mask of concrete value types.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"If the value types do not match the mask, an error is thrown."}],"title":"masked(_:_:_:_:)"}}}