{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/osckit.OSCKit\/documentation\/OSCKit\/Swift\/Array\/masked(_:_:_:)-5q7jx"},"schemaVersion":{"major":0,"minor":3,"patch":0},"hierarchy":{"paths":[["doc:\/\/osckit.OSCKit\/documentation\/OSCKit","doc:\/\/osckit.OSCKit\/documentation\/OSCKit\/Swift","doc:\/\/osckit.OSCKit\/documentation\/OSCKit\/Swift\/Array"]]},"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"masked"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"V0"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"V1"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"V2"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"_"},{"text":" ","kind":"text"},{"text":"v0","kind":"internalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"V0"},{"kind":"text","text":".Type, "},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"v1","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"V1","kind":"typeIdentifier"},{"kind":"text","text":".Type, "},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"v2"},{"text":": ","kind":"text"},{"text":"V2","kind":"typeIdentifier"},{"kind":"text","text":".Type) "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> ("},{"kind":"typeIdentifier","text":"V0"},{"text":", ","kind":"text"},{"text":"V1","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"V2"},{"text":") ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"V0","kind":"typeIdentifier"},{"kind":"text","text":" : "},{"identifier":"doc:\/\/osckit.OSCKit\/documentation\/OSCKit\/OSCValueMaskable","kind":"typeIdentifier","text":"OSCValueMaskable","preciseIdentifier":"s:10OSCKitCore16OSCValueMaskableP"},{"text":", ","kind":"text"},{"text":"V1","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:10OSCKitCore16OSCValueMaskableP","kind":"typeIdentifier","identifier":"doc:\/\/osckit.OSCKit\/documentation\/OSCKit\/OSCValueMaskable","text":"OSCValueMaskable"},{"kind":"text","text":", "},{"text":"V2","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"identifier":"doc:\/\/osckit.OSCKit\/documentation\/OSCKit\/OSCValueMaskable","kind":"typeIdentifier","text":"OSCValueMaskable","preciseIdentifier":"s:10OSCKitCore16OSCValueMaskableP"}]}]},{"content":[{"type":"heading","text":"Discussion","anchor":"discussion","level":2},{"inlineContent":[{"type":"text","text":"A mask of up to 10 value types in sequence."}],"type":"paragraph"},{"inlineContent":[{"text":"Common usage:","type":"text"}],"type":"paragraph"},{"syntax":null,"type":"codeListing","code":["\/\/ as a tuple","let tuple = try values.masked(String.self, Int.self)","print(tuple.0, tuple.1)","","\/\/ unwrapped into local variables","let (string, int) = try values.masked(String.self, Int.self)","print(string, int)"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Basic examples:"}]},{"syntax":null,"type":"codeListing","code":["\/\/ present optional value","[\"Test\", 123, Int32(456)].masked(String.self, Int32.self, Int32?.self)","tuple.0 \/\/ \"Test\" as String","tuple.1 \/\/ 123 as Int","tuple.2 \/\/ 456 as Int32?","","\/\/ missing optional value","[\"Test\", 123].masked(String.self, Int32.self, Int32?.self)","tuple.0 \/\/ \"Test\" as String","tuple.1 \/\/ 123 as Int","tuple.2 \/\/ nil as Int32?","","\/\/ mismatching types","[123, 456].masked(String.self, Int32.self)","\/\/ throws OSCValueMaskError.mismatchedTypes","","\/\/ mismatched element count, regardless of types","[123, 456].masked(String.self, Int32.self, Int32.self)","\/\/ throws OSCValueMaskError.invalidCount"]},{"type":"paragraph","inlineContent":[{"code":"Int.self","type":"codeVoice"},{"text":" is a special common-use interpolated type for convenience:","type":"text"}]},{"syntax":null,"code":["\/\/ any integer may match against Int.self and is converted to Int","[Int32(123) Int64(456)].masked(Int.self, Int.self)","tuple.0 \/\/ 123 as Int","tuple.1 \/\/ 456 as Int","","\/\/ all other integer types must match themself exactly","[Int32(123) Int64(456)].masked(Int32.self, Int32.self)","\/\/ throws error; mask does not match","","\/\/ same with optionals; specific integer types must match if present","[123, 456, 789].masked(String.self, Int.self, Int32?.self)","\/\/ throws error; mask does not match"],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"type":"text","text":"In addition to core OSC concrete types, various non-standard OSC types can be used and will"},{"text":" ","type":"text"},{"text":"be transparently encoded as their closest related OSC core type when encoding in an","type":"text"},{"text":" ","type":"text"},{"type":"reference","identifier":"doc:\/\/osckit.OSCKit\/documentation\/OSCKit\/OSCMessage","isActive":true},{"type":"text","text":"."}]},{"inlineContent":[{"text":"These types conform to the ","type":"text"},{"identifier":"doc:\/\/osckit.OSCKit\/documentation\/OSCKit\/OSCInterpolatedValue","type":"reference","isActive":true},{"text":" protocol (which defines their core","type":"text"},{"text":" ","type":"text"},{"text":"encoding value type) and may be used any where ","type":"text"},{"type":"reference","identifier":"doc:\/\/osckit.OSCKit\/documentation\/OSCKit\/OSCValue","isActive":true},{"text":" is accepted.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"OSCKit provides conformance for a number of such common Swift Standard Library types:"},{"text":" ","type":"text"},{"type":"codeVoice","code":"Int8"},{"type":"text","text":", "},{"code":"Int16","type":"codeVoice"},{"type":"text","text":", "},{"type":"codeVoice","code":"UInt"},{"text":", ","type":"text"},{"code":"UInt8","type":"codeVoice"},{"text":", ","type":"text"},{"type":"codeVoice","code":"UInt16"},{"type":"text","text":", "},{"type":"codeVoice","code":"UInt32"},{"type":"text","text":", "},{"code":"UInt64","type":"codeVoice"},{"text":", ","type":"text"},{"type":"codeVoice","code":"Float16"},{"type":"text","text":", "},{"type":"codeVoice","code":"Float80"},{"text":".","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"(Note that "},{"code":"Int32","type":"codeVoice"},{"type":"text","text":", "},{"type":"codeVoice","code":"Int64"},{"type":"text","text":", "},{"code":"Float32","type":"codeVoice"},{"text":" are already core ","type":"text"},{"type":"codeVoice","code":"OSCValue"},{"type":"text","text":" types.)"}],"type":"paragraph"},{"type":"codeListing","syntax":null,"code":["let values: OSCValues = [Int8(123), Int16(123)]"]},{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"AnyOSCNumberValue"},{"type":"text","text":" is a special type to match and box any OSC numeric value."}]},{"syntax":null,"type":"codeListing","code":["[Int8(123)]","    .masked(AnyOSCNumberValue.self)","    \/\/ (AnyOSCNumberValue(Int8(123)))","","[Double(123.45)]","    .masked(AnyOSCNumberValue.self)","    \/\/ (AnyOSCNumberValue(Double(123.45)))","","\/\/ which can be accessed as either typed:","AnyOSCNumberValue(Int8(123)).base \/\/ .int(Int8)","","\/\/ or interpolated:","AnyOSCNumberValue(Int8(123)).intValue \/\/ 123 as Int","AnyOSCNumberValue(Int8(123)).doubleValue \/\/ 123.0 as Double"]},{"type":"paragraph","inlineContent":[{"text":"One or more trailing types can also be expressed as as an ","type":"text"},{"type":"codeVoice","code":"Optional"},{"type":"text","text":" (ie: "},{"code":"Int32?.self","type":"codeVoice"},{"text":")","type":"text"},{"type":"text","text":" "},{"type":"text","text":"which will match that value type or return "},{"code":"nil","type":"codeVoice"},{"type":"text","text":" if the value is missing in the base value"},{"type":"text","text":" "},{"type":"text","text":"array."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Core OSC concrete types:"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"Int32.self"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"Float32.self"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"String.self"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"Data.self"},{"type":"text","text":" (a.k.a. OSC blob)"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"code":"OSCTimeTag.self","type":"codeVoice"}]}]}]},{"type":"paragraph","inlineContent":[{"text":"Extended (non-standard) OSC concrete types:","type":"text"}]},{"items":[{"content":[{"inlineContent":[{"type":"codeVoice","code":"Bool.self"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"codeVoice","code":"Character.self"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"code":"Int64.self","type":"codeVoice"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"codeVoice","code":"Double.self"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"code":"OSCArrayValue.self","type":"codeVoice"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"code":"OSCImpulseValue.self","type":"codeVoice"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"codeVoice","code":"OSCMIDIValue.self"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"code":"OSCNullValue.self","type":"codeVoice"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"code":"OSCStringAltValue.self","type":"codeVoice"}]}]}],"type":"unorderedList"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Interpolating concrete types for convenience:"}]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"code":"Int.self","type":"codeVoice"},{"text":" (converts from any OSC integer types)","type":"text"}],"type":"paragraph"}]}]},{"type":"paragraph","inlineContent":[{"text":"Opaque types:","type":"text"}]},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"AnyOSCNumberValue.self"},{"type":"text","text":" (boxes any OSC integer or float number)"}]}]}],"type":"unorderedList"},{"name":"Throws","type":"aside","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":""},{"isActive":true,"identifier":"doc:\/\/osckit.OSCKit\/documentation\/OSCKit\/OSCValueMaskError","type":"reference"}]}],"style":"note"}],"kind":"content"}],"metadata":{"extendedModule":"Swift","roleHeading":"Instance Method","title":"masked(_:_:_:)","role":"symbol","symbolKind":"method","conformance":{"constraints":[{"code":"Element","type":"codeVoice"},{"type":"text","text":" is "},{"code":"any OSCValue","type":"codeVoice"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"modules":[{"name":"OSCKit","relatedModules":["Swift"]}],"externalID":"s:Sa10OSCKitCoreAA8OSCValue_pRszlE6maskedyqd___qd_0_qd_1_tqd__m_qd_0_mqd_1_mtKAA0C8MaskableRd__AaDRd_0_AaDRd_1_r1_lF","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"masked","kind":"identifier"},{"kind":"text","text":"<"},{"text":"V0","kind":"genericParameter"},{"text":", ","kind":"text"},{"kind":"genericParameter","text":"V1"},{"text":", ","kind":"text"},{"kind":"genericParameter","text":"V2"},{"text":">(","kind":"text"},{"text":"V0","kind":"typeIdentifier"},{"kind":"text","text":".Type, "},{"kind":"typeIdentifier","text":"V1"},{"text":".Type, ","kind":"text"},{"kind":"typeIdentifier","text":"V2"},{"text":".Type) ","kind":"text"},{"kind":"keyword","text":"throws"},{"text":" -> (","kind":"text"},{"kind":"typeIdentifier","text":"V0"},{"kind":"text","text":", "},{"text":"V1","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"V2"},{"kind":"text","text":")"}]},"variants":[{"paths":["\/documentation\/osckit\/swift\/array\/masked(_:_:_:)-5q7jx"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","abstract":[{"type":"text","text":"Returns the OSC value sequence as a strongly typed tuple"},{"type":"text","text":" "},{"text":"if it matches the given mask of concrete value types.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"If the value types do not match the mask, an error is thrown."}],"references":{"doc://osckit.OSCKit/documentation/OSCKit/Swift":{"kind":"symbol","abstract":[],"url":"\/documentation\/osckit\/swift","identifier":"doc:\/\/osckit.OSCKit\/documentation\/OSCKit\/Swift","type":"topic","role":"collection","title":"Swift"},"doc://osckit.OSCKit/documentation/OSCKit/OSCValueMaskError":{"identifier":"doc:\/\/osckit.OSCKit\/documentation\/OSCKit\/OSCValueMaskError","abstract":[{"type":"text","text":"Error thrown by "},{"identifier":"doc:\/\/osckit.OSCKit\/documentation\/OSCKit\/OSCValues","type":"reference","isActive":true},{"type":"text","text":" "},{"code":"masked(...)","type":"codeVoice"},{"text":" methods.","type":"text"}],"kind":"symbol","type":"topic","url":"\/documentation\/osckit\/oscvaluemaskerror","title":"OSCValueMaskError","role":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"OSCValueMaskError"}],"navigatorTitle":[{"text":"OSCValueMaskError","kind":"identifier"}]},"doc://osckit.OSCKit/documentation/OSCKit/OSCValueMaskable":{"kind":"symbol","abstract":[{"type":"text","text":"Protocol which all maskable "},{"type":"reference","isActive":true,"identifier":"doc:\/\/osckit.OSCKit\/documentation\/OSCKit\/OSCValue"},{"type":"text","text":" types conform."}],"url":"\/documentation\/osckit\/oscvaluemaskable","type":"topic","title":"OSCValueMaskable","identifier":"doc:\/\/osckit.OSCKit\/documentation\/OSCKit\/OSCValueMaskable","navigatorTitle":[{"text":"OSCValueMaskable","kind":"identifier"}],"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"OSCValueMaskable"}],"role":"symbol"},"doc://osckit.OSCKit/documentation/OSCKit/OSCMessage":{"abstract":[{"type":"text","text":"OSC Message."}],"type":"topic","url":"\/documentation\/osckit\/oscmessage","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"OSCMessage","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"OSCMessage"}],"title":"OSCMessage","identifier":"doc:\/\/osckit.OSCKit\/documentation\/OSCKit\/OSCMessage","kind":"symbol","role":"symbol"},"doc://osckit.OSCKit/documentation/OSCKit/Swift/Array":{"title":"Array","identifier":"doc:\/\/osckit.OSCKit\/documentation\/OSCKit\/Swift\/Array","abstract":[],"kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"extension"},{"text":" ","kind":"text"},{"kind":"identifier","preciseIdentifier":"s:Sa","text":"Array"}],"url":"\/documentation\/osckit\/swift\/array","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Array"}]},"doc://osckit.OSCKit/documentation/OSCKit/OSCValues":{"type":"topic","title":"OSCValues","url":"\/documentation\/osckit\/oscvalues","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"OSCValues"}],"navigatorTitle":[{"kind":"identifier","text":"OSCValues"}],"kind":"symbol","identifier":"doc:\/\/osckit.OSCKit\/documentation\/OSCKit\/OSCValues","abstract":[],"role":"symbol"},"doc://osckit.OSCKit/documentation/OSCKit/OSCInterpolatedValue":{"navigatorTitle":[{"text":"OSCInterpolatedValue","kind":"identifier"}],"url":"\/documentation\/osckit\/oscinterpolatedvalue","type":"topic","identifier":"doc:\/\/osckit.OSCKit\/documentation\/OSCKit\/OSCInterpolatedValue","kind":"symbol","title":"OSCInterpolatedValue","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"OSCInterpolatedValue","kind":"identifier"}],"abstract":[{"type":"text","text":"Protocol to which all interpolated OSC value types conform."},{"type":"text","text":" "},{"type":"text","text":"This includes all convenience types that are not themselves core OSC value types."}]},"doc://osckit.OSCKit/documentation/OSCKit/OSCValue":{"kind":"symbol","abstract":[{"type":"text","text":"Protocol to which all compatible OSC value types conform."}],"url":"\/documentation\/osckit\/oscvalue","type":"topic","title":"OSCValue","identifier":"doc:\/\/osckit.OSCKit\/documentation\/OSCKit\/OSCValue","navigatorTitle":[{"kind":"identifier","text":"OSCValue"}],"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"OSCValue","kind":"identifier"}],"role":"symbol"},"doc://osckit.OSCKit/documentation/OSCKit":{"url":"\/documentation\/osckit","identifier":"doc:\/\/osckit.OSCKit\/documentation\/OSCKit","role":"collection","type":"topic","abstract":[{"type":"text","text":"Open Sound Control (OSC) library for macOS, iOS and tvOS."}],"kind":"symbol","title":"OSCKit"},"doc://osckit.OSCKit/documentation/OSCKit/Swift/Array/masked(_:_:_:)-5q7jx":{"url":"\/documentation\/osckit\/swift\/array\/masked(_:_:_:)-5q7jx","role":"symbol","identifier":"doc:\/\/osckit.OSCKit\/documentation\/OSCKit\/Swift\/Array\/masked(_:_:_:)-5q7jx","kind":"symbol","conformance":{"constraints":[{"code":"Element","type":"codeVoice"},{"type":"text","text":" is "},{"code":"any OSCValue","type":"codeVoice"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"title":"masked(_:_:_:)","abstract":[{"type":"text","text":"Returns the OSC value sequence as a strongly typed tuple"},{"text":" ","type":"text"},{"type":"text","text":"if it matches the given mask of concrete value types."},{"type":"text","text":" "},{"text":"If the value types do not match the mask, an error is thrown.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"masked"},{"kind":"text","text":"<"},{"text":"V0","kind":"genericParameter"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"V1"},{"text":", ","kind":"text"},{"text":"V2","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"V0","kind":"typeIdentifier"},{"text":".Type, ","kind":"text"},{"kind":"typeIdentifier","text":"V1"},{"text":".Type, ","kind":"text"},{"kind":"typeIdentifier","text":"V2"},{"kind":"text","text":".Type) "},{"text":"throws","kind":"keyword"},{"text":" -> (","kind":"text"},{"kind":"typeIdentifier","text":"V0"},{"kind":"text","text":", "},{"text":"V1","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"V2","kind":"typeIdentifier"},{"kind":"text","text":")"}],"type":"topic"}}}